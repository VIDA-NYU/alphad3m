# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pipeline_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='pipeline_service.proto',
  package='compute.pipeline',
  syntax='proto3',
  serialized_pb=_b('\n\x16pipeline_service.proto\x12\x10\x63ompute.pipeline\"$\n\x0eSessionContext\x12\x12\n\nsession_id\x18\x01 \x01(\t\"E\n\x06Status\x12*\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x1c.compute.pipeline.StatusCode\x12\x0f\n\x07\x64\x65tails\x18\x02 \x01(\t\"g\n\x08Response\x12\x31\n\x07\x63ontext\x18\x01 \x01(\x0b\x32 .compute.pipeline.SessionContext\x12(\n\x06status\x18\x02 \x01(\x0b\x32\x18.compute.pipeline.Status\"\x10\n\x0eSessionRequest\"\xae\x02\n\x15PipelineCreateRequest\x12\x31\n\x07\x63ontext\x18\x01 \x01(\x0b\x32 .compute.pipeline.SessionContext\x12\x1a\n\x12train_dataset_uris\x18\x02 \x03(\t\x12(\n\x04task\x18\x03 \x01(\x0e\x32\x1a.compute.pipeline.TaskType\x12\x18\n\x10task_description\x18\x04 \x01(\t\x12(\n\x06output\x18\x05 \x01(\x0e\x32\x18.compute.pipeline.Output\x12(\n\x06metric\x18\x06 \x03(\x0e\x32\x18.compute.pipeline.Metric\x12\x17\n\x0ftarget_features\x18\x07 \x03(\t\x12\x15\n\rmax_pipelines\x18\x08 \x01(\x05\"@\n\x05Score\x12(\n\x06metric\x18\x01 \x01(\x0e\x32\x18.compute.pipeline.Metric\x12\r\n\x05value\x18\x02 \x01(\x02\"y\n\x08Pipeline\x12\x1b\n\x13predict_result_uris\x18\x01 \x03(\t\x12(\n\x06output\x18\x02 \x01(\x0e\x32\x18.compute.pipeline.Output\x12&\n\x05score\x18\x03 \x03(\x0b\x32\x17.compute.pipeline.Score\"\xc4\x01\n\x14PipelineCreateResult\x12\x31\n\rresponse_info\x18\x01 \x01(\x0b\x32\x1a.compute.pipeline.Response\x12\x31\n\rprogress_info\x18\x02 \x01(\x0e\x32\x1a.compute.pipeline.Progress\x12\x13\n\x0bpipeline_id\x18\x03 \x01(\t\x12\x31\n\rpipeline_info\x18\x04 \x01(\x0b\x32\x1a.compute.pipeline.Pipeline\"~\n\x16PipelineExecuteRequest\x12\x31\n\x07\x63ontext\x18\x01 \x01(\x0b\x32 .compute.pipeline.SessionContext\x12\x13\n\x0bpipeline_id\x18\x02 \x01(\t\x12\x1c\n\x14predict_dataset_uris\x18\x03 \x03(\t\"\xa7\x01\n\x15PipelineExecuteResult\x12\x31\n\rresponse_info\x18\x01 \x01(\x0b\x32\x1a.compute.pipeline.Response\x12\x31\n\rprogress_info\x18\x02 \x01(\x0e\x32\x1a.compute.pipeline.Progress\x12\x13\n\x0bpipeline_id\x18\x03 \x01(\t\x12\x13\n\x0bresult_uris\x18\x04 \x03(\t*\x85\x02\n\nStatusCode\x12\x06\n\x02OK\x10\x00\x12\r\n\tCANCELLED\x10\x01\x12\x13\n\x0fSESSION_UNKNOWN\x10\x02\x12\x11\n\rSESSION_ENDED\x10\x03\x12\x13\n\x0fSESSION_EXPIRED\x10\x04\x12\x14\n\x10INVALID_ARGUMENT\x10\x05\x12\x16\n\x12RESOURCE_EXHAUSTED\x10\x06\x12\x0f\n\x0bUNAVAILABLE\x10\x07\x12\x17\n\x13\x46\x41ILED_PRECONDITION\x10\x08\x12\x10\n\x0cOUT_OF_RANGE\x10\t\x12\x11\n\rUNIMPLEMENTED\x10\n\x12\x0c\n\x08INTERNAL\x10\x0b\x12\x0b\n\x07\x41\x42ORTED\x10\x0c\x12\x0b\n\x07UNKNOWN\x10\r*B\n\x08Progress\x12\r\n\tSUBMITTED\x10\x00\x12\x0b\n\x07RUNNING\x10\x01\x12\x0b\n\x07UPDATED\x10\x02\x12\r\n\tCOMPLETED\x10\x03*\xd9\x01\n\x08TaskType\x12\x12\n\x0e\x43LASSIFICATION\x10\x00\x12\x0e\n\nREGRESSION\x10\x01\x12\x17\n\x13SIMILARITY_MATCHING\x10\x02\x12\x13\n\x0fLINK_PREDICTION\x10\x03\x12\x15\n\x11VERTEX_NOMINATION\x10\x04\x12\x17\n\x13\x43OMMUNITY_DETECTION\x10\x05\x12\x12\n\x0eGRAPH_MATCHING\x10\x06\x12\x1a\n\x16TIMESERIES_FORECASTING\x10\x07\x12\x1b\n\x17\x43OLLABORATIVE_FILTERING\x10\x08*\x8a\x01\n\x0bTaskSubtype\x12\x08\n\x04NONE\x10\x00\x12\n\n\x06\x42INARY\x10\x01\x12\x0e\n\nMULTICLASS\x10\x02\x12\x0e\n\nMULTILABEL\x10\x03\x12\x0e\n\nUNIVARIATE\x10\x04\x12\x10\n\x0cMULTIVARIATE\x10\x05\x12\x0f\n\x0bOVERLAPPING\x10\x06\x12\x12\n\x0eNONOVERLAPPING\x10\x07*\x8b\x01\n\x06Output\x12\x0f\n\x0b\x43LASS_LABEL\x10\x00\x12\x0f\n\x0bPROBABILITY\x10\x01\x12\x08\n\x04REAL\x10\x02\x12\x0b\n\x07NODE_ID\x10\x03\x12\x16\n\x12VECTOR_CLASS_LABEL\x10\x04\x12\x15\n\x11VECTOR_STOCHASTIC\x10\x05\x12\x0f\n\x0bVECTOR_REAL\x10\x06\x12\x08\n\x04\x46ILE\x10\x07*\x94\x02\n\x06Metric\x12\x0c\n\x08\x41\x43\x43URACY\x10\x00\x12\x06\n\x02\x46\x31\x10\x01\x12\x0c\n\x08\x46\x31_MICRO\x10\x02\x12\x0c\n\x08\x46\x31_MACRO\x10\x03\x12\x0b\n\x07ROC_AUC\x10\x04\x12\x11\n\rROC_AUC_MICRO\x10\x05\x12\x11\n\rROC_AUC_MACRO\x10\x06\x12\x1b\n\x17ROOT_MEAN_SQUARED_ERROR\x10\x07\x12\x1f\n\x1bROOT_MEAN_SQUARED_ERROR_AVG\x10\x08\x12\x17\n\x13MEAN_ABSOLUTE_ERROR\x10\t\x12\r\n\tR_SQUARED\x10\n\x12!\n\x1dNORMALIZED_MUTUAL_INFORMATION\x10\x0b\x12\x1c\n\x18JACCARD_SIMILARITY_SCORE\x10\x0c\x32\x81\x03\n\x0fPipelineCompute\x12\x66\n\x0f\x43reatePipelines\x12\'.compute.pipeline.PipelineCreateRequest\x1a&.compute.pipeline.PipelineCreateResult\"\x00\x30\x01\x12h\n\x0f\x45xecutePipeline\x12(.compute.pipeline.PipelineExecuteRequest\x1a\'.compute.pipeline.PipelineExecuteResult\"\x00\x30\x01\x12N\n\x0cStartSession\x12 .compute.pipeline.SessionRequest\x1a\x1a.compute.pipeline.Response\"\x00\x12L\n\nEndSession\x12 .compute.pipeline.SessionContext\x1a\x1a.compute.pipeline.Response\"\x00\x42\nZ\x08pipelineb\x06proto3')
)

_STATUSCODE = _descriptor.EnumDescriptor(
  name='StatusCode',
  full_name='compute.pipeline.StatusCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CANCELLED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SESSION_UNKNOWN', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SESSION_ENDED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SESSION_EXPIRED', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_ARGUMENT', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESOURCE_EXHAUSTED', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNAVAILABLE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED_PRECONDITION', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUT_OF_RANGE', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNIMPLEMENTED', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERNAL', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ABORTED', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=13, number=13,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1268,
  serialized_end=1529,
)
_sym_db.RegisterEnumDescriptor(_STATUSCODE)

StatusCode = enum_type_wrapper.EnumTypeWrapper(_STATUSCODE)
_PROGRESS = _descriptor.EnumDescriptor(
  name='Progress',
  full_name='compute.pipeline.Progress',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUBMITTED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPLETED', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1531,
  serialized_end=1597,
)
_sym_db.RegisterEnumDescriptor(_PROGRESS)

Progress = enum_type_wrapper.EnumTypeWrapper(_PROGRESS)
_TASKTYPE = _descriptor.EnumDescriptor(
  name='TaskType',
  full_name='compute.pipeline.TaskType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CLASSIFICATION', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REGRESSION', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SIMILARITY_MATCHING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LINK_PREDICTION', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VERTEX_NOMINATION', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMMUNITY_DETECTION', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GRAPH_MATCHING', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIMESERIES_FORECASTING', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COLLABORATIVE_FILTERING', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1600,
  serialized_end=1817,
)
_sym_db.RegisterEnumDescriptor(_TASKTYPE)

TaskType = enum_type_wrapper.EnumTypeWrapper(_TASKTYPE)
_TASKSUBTYPE = _descriptor.EnumDescriptor(
  name='TaskSubtype',
  full_name='compute.pipeline.TaskSubtype',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BINARY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTICLASS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTILABEL', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNIVARIATE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTIVARIATE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OVERLAPPING', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NONOVERLAPPING', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1820,
  serialized_end=1958,
)
_sym_db.RegisterEnumDescriptor(_TASKSUBTYPE)

TaskSubtype = enum_type_wrapper.EnumTypeWrapper(_TASKSUBTYPE)
_OUTPUT = _descriptor.EnumDescriptor(
  name='Output',
  full_name='compute.pipeline.Output',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CLASS_LABEL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROBABILITY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REAL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NODE_ID', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VECTOR_CLASS_LABEL', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VECTOR_STOCHASTIC', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VECTOR_REAL', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1961,
  serialized_end=2100,
)
_sym_db.RegisterEnumDescriptor(_OUTPUT)

Output = enum_type_wrapper.EnumTypeWrapper(_OUTPUT)
_METRIC = _descriptor.EnumDescriptor(
  name='Metric',
  full_name='compute.pipeline.Metric',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACCURACY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F1', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F1_MICRO', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F1_MACRO', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROC_AUC', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROC_AUC_MICRO', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROC_AUC_MACRO', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROOT_MEAN_SQUARED_ERROR', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROOT_MEAN_SQUARED_ERROR_AVG', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MEAN_ABSOLUTE_ERROR', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='R_SQUARED', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NORMALIZED_MUTUAL_INFORMATION', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JACCARD_SIMILARITY_SCORE', index=12, number=12,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2103,
  serialized_end=2379,
)
_sym_db.RegisterEnumDescriptor(_METRIC)

Metric = enum_type_wrapper.EnumTypeWrapper(_METRIC)
OK = 0
CANCELLED = 1
SESSION_UNKNOWN = 2
SESSION_ENDED = 3
SESSION_EXPIRED = 4
INVALID_ARGUMENT = 5
RESOURCE_EXHAUSTED = 6
UNAVAILABLE = 7
FAILED_PRECONDITION = 8
OUT_OF_RANGE = 9
UNIMPLEMENTED = 10
INTERNAL = 11
ABORTED = 12
UNKNOWN = 13
SUBMITTED = 0
RUNNING = 1
UPDATED = 2
COMPLETED = 3
CLASSIFICATION = 0
REGRESSION = 1
SIMILARITY_MATCHING = 2
LINK_PREDICTION = 3
VERTEX_NOMINATION = 4
COMMUNITY_DETECTION = 5
GRAPH_MATCHING = 6
TIMESERIES_FORECASTING = 7
COLLABORATIVE_FILTERING = 8
NONE = 0
BINARY = 1
MULTICLASS = 2
MULTILABEL = 3
UNIVARIATE = 4
MULTIVARIATE = 5
OVERLAPPING = 6
NONOVERLAPPING = 7
CLASS_LABEL = 0
PROBABILITY = 1
REAL = 2
NODE_ID = 3
VECTOR_CLASS_LABEL = 4
VECTOR_STOCHASTIC = 5
VECTOR_REAL = 6
FILE = 7
ACCURACY = 0
F1 = 1
F1_MICRO = 2
F1_MACRO = 3
ROC_AUC = 4
ROC_AUC_MICRO = 5
ROC_AUC_MACRO = 6
ROOT_MEAN_SQUARED_ERROR = 7
ROOT_MEAN_SQUARED_ERROR_AVG = 8
MEAN_ABSOLUTE_ERROR = 9
R_SQUARED = 10
NORMALIZED_MUTUAL_INFORMATION = 11
JACCARD_SIMILARITY_SCORE = 12



_SESSIONCONTEXT = _descriptor.Descriptor(
  name='SessionContext',
  full_name='compute.pipeline.SessionContext',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session_id', full_name='compute.pipeline.SessionContext.session_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=80,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='compute.pipeline.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='compute.pipeline.Status.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='details', full_name='compute.pipeline.Status.details', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=82,
  serialized_end=151,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='compute.pipeline.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='compute.pipeline.Response.context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='compute.pipeline.Response.status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=153,
  serialized_end=256,
)


_SESSIONREQUEST = _descriptor.Descriptor(
  name='SessionRequest',
  full_name='compute.pipeline.SessionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=258,
  serialized_end=274,
)


_PIPELINECREATEREQUEST = _descriptor.Descriptor(
  name='PipelineCreateRequest',
  full_name='compute.pipeline.PipelineCreateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='compute.pipeline.PipelineCreateRequest.context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='train_dataset_uris', full_name='compute.pipeline.PipelineCreateRequest.train_dataset_uris', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task', full_name='compute.pipeline.PipelineCreateRequest.task', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_description', full_name='compute.pipeline.PipelineCreateRequest.task_description', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output', full_name='compute.pipeline.PipelineCreateRequest.output', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metric', full_name='compute.pipeline.PipelineCreateRequest.metric', index=5,
      number=6, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target_features', full_name='compute.pipeline.PipelineCreateRequest.target_features', index=6,
      number=7, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_pipelines', full_name='compute.pipeline.PipelineCreateRequest.max_pipelines', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=277,
  serialized_end=579,
)


_SCORE = _descriptor.Descriptor(
  name='Score',
  full_name='compute.pipeline.Score',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metric', full_name='compute.pipeline.Score.metric', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='compute.pipeline.Score.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=581,
  serialized_end=645,
)


_PIPELINE = _descriptor.Descriptor(
  name='Pipeline',
  full_name='compute.pipeline.Pipeline',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='predict_result_uris', full_name='compute.pipeline.Pipeline.predict_result_uris', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output', full_name='compute.pipeline.Pipeline.output', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='score', full_name='compute.pipeline.Pipeline.score', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=647,
  serialized_end=768,
)


_PIPELINECREATERESULT = _descriptor.Descriptor(
  name='PipelineCreateResult',
  full_name='compute.pipeline.PipelineCreateResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='response_info', full_name='compute.pipeline.PipelineCreateResult.response_info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='progress_info', full_name='compute.pipeline.PipelineCreateResult.progress_info', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pipeline_id', full_name='compute.pipeline.PipelineCreateResult.pipeline_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pipeline_info', full_name='compute.pipeline.PipelineCreateResult.pipeline_info', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=771,
  serialized_end=967,
)


_PIPELINEEXECUTEREQUEST = _descriptor.Descriptor(
  name='PipelineExecuteRequest',
  full_name='compute.pipeline.PipelineExecuteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='compute.pipeline.PipelineExecuteRequest.context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pipeline_id', full_name='compute.pipeline.PipelineExecuteRequest.pipeline_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='predict_dataset_uris', full_name='compute.pipeline.PipelineExecuteRequest.predict_dataset_uris', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=969,
  serialized_end=1095,
)


_PIPELINEEXECUTERESULT = _descriptor.Descriptor(
  name='PipelineExecuteResult',
  full_name='compute.pipeline.PipelineExecuteResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='response_info', full_name='compute.pipeline.PipelineExecuteResult.response_info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='progress_info', full_name='compute.pipeline.PipelineExecuteResult.progress_info', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pipeline_id', full_name='compute.pipeline.PipelineExecuteResult.pipeline_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result_uris', full_name='compute.pipeline.PipelineExecuteResult.result_uris', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1098,
  serialized_end=1265,
)

_STATUS.fields_by_name['code'].enum_type = _STATUSCODE
_RESPONSE.fields_by_name['context'].message_type = _SESSIONCONTEXT
_RESPONSE.fields_by_name['status'].message_type = _STATUS
_PIPELINECREATEREQUEST.fields_by_name['context'].message_type = _SESSIONCONTEXT
_PIPELINECREATEREQUEST.fields_by_name['task'].enum_type = _TASKTYPE
_PIPELINECREATEREQUEST.fields_by_name['output'].enum_type = _OUTPUT
_PIPELINECREATEREQUEST.fields_by_name['metric'].enum_type = _METRIC
_SCORE.fields_by_name['metric'].enum_type = _METRIC
_PIPELINE.fields_by_name['output'].enum_type = _OUTPUT
_PIPELINE.fields_by_name['score'].message_type = _SCORE
_PIPELINECREATERESULT.fields_by_name['response_info'].message_type = _RESPONSE
_PIPELINECREATERESULT.fields_by_name['progress_info'].enum_type = _PROGRESS
_PIPELINECREATERESULT.fields_by_name['pipeline_info'].message_type = _PIPELINE
_PIPELINEEXECUTEREQUEST.fields_by_name['context'].message_type = _SESSIONCONTEXT
_PIPELINEEXECUTERESULT.fields_by_name['response_info'].message_type = _RESPONSE
_PIPELINEEXECUTERESULT.fields_by_name['progress_info'].enum_type = _PROGRESS
DESCRIPTOR.message_types_by_name['SessionContext'] = _SESSIONCONTEXT
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['SessionRequest'] = _SESSIONREQUEST
DESCRIPTOR.message_types_by_name['PipelineCreateRequest'] = _PIPELINECREATEREQUEST
DESCRIPTOR.message_types_by_name['Score'] = _SCORE
DESCRIPTOR.message_types_by_name['Pipeline'] = _PIPELINE
DESCRIPTOR.message_types_by_name['PipelineCreateResult'] = _PIPELINECREATERESULT
DESCRIPTOR.message_types_by_name['PipelineExecuteRequest'] = _PIPELINEEXECUTEREQUEST
DESCRIPTOR.message_types_by_name['PipelineExecuteResult'] = _PIPELINEEXECUTERESULT
DESCRIPTOR.enum_types_by_name['StatusCode'] = _STATUSCODE
DESCRIPTOR.enum_types_by_name['Progress'] = _PROGRESS
DESCRIPTOR.enum_types_by_name['TaskType'] = _TASKTYPE
DESCRIPTOR.enum_types_by_name['TaskSubtype'] = _TASKSUBTYPE
DESCRIPTOR.enum_types_by_name['Output'] = _OUTPUT
DESCRIPTOR.enum_types_by_name['Metric'] = _METRIC
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SessionContext = _reflection.GeneratedProtocolMessageType('SessionContext', (_message.Message,), dict(
  DESCRIPTOR = _SESSIONCONTEXT,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.SessionContext)
  ))
_sym_db.RegisterMessage(SessionContext)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.Status)
  ))
_sym_db.RegisterMessage(Status)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.Response)
  ))
_sym_db.RegisterMessage(Response)

SessionRequest = _reflection.GeneratedProtocolMessageType('SessionRequest', (_message.Message,), dict(
  DESCRIPTOR = _SESSIONREQUEST,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.SessionRequest)
  ))
_sym_db.RegisterMessage(SessionRequest)

PipelineCreateRequest = _reflection.GeneratedProtocolMessageType('PipelineCreateRequest', (_message.Message,), dict(
  DESCRIPTOR = _PIPELINECREATEREQUEST,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.PipelineCreateRequest)
  ))
_sym_db.RegisterMessage(PipelineCreateRequest)

Score = _reflection.GeneratedProtocolMessageType('Score', (_message.Message,), dict(
  DESCRIPTOR = _SCORE,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.Score)
  ))
_sym_db.RegisterMessage(Score)

Pipeline = _reflection.GeneratedProtocolMessageType('Pipeline', (_message.Message,), dict(
  DESCRIPTOR = _PIPELINE,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.Pipeline)
  ))
_sym_db.RegisterMessage(Pipeline)

PipelineCreateResult = _reflection.GeneratedProtocolMessageType('PipelineCreateResult', (_message.Message,), dict(
  DESCRIPTOR = _PIPELINECREATERESULT,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.PipelineCreateResult)
  ))
_sym_db.RegisterMessage(PipelineCreateResult)

PipelineExecuteRequest = _reflection.GeneratedProtocolMessageType('PipelineExecuteRequest', (_message.Message,), dict(
  DESCRIPTOR = _PIPELINEEXECUTEREQUEST,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.PipelineExecuteRequest)
  ))
_sym_db.RegisterMessage(PipelineExecuteRequest)

PipelineExecuteResult = _reflection.GeneratedProtocolMessageType('PipelineExecuteResult', (_message.Message,), dict(
  DESCRIPTOR = _PIPELINEEXECUTERESULT,
  __module__ = 'pipeline_service_pb2'
  # @@protoc_insertion_point(class_scope:compute.pipeline.PipelineExecuteResult)
  ))
_sym_db.RegisterMessage(PipelineExecuteResult)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\010pipeline'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class PipelineComputeStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CreatePipelines = channel.unary_stream(
          '/compute.pipeline.PipelineCompute/CreatePipelines',
          request_serializer=PipelineCreateRequest.SerializeToString,
          response_deserializer=PipelineCreateResult.FromString,
          )
      self.ExecutePipeline = channel.unary_stream(
          '/compute.pipeline.PipelineCompute/ExecutePipeline',
          request_serializer=PipelineExecuteRequest.SerializeToString,
          response_deserializer=PipelineExecuteResult.FromString,
          )
      self.StartSession = channel.unary_unary(
          '/compute.pipeline.PipelineCompute/StartSession',
          request_serializer=SessionRequest.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.EndSession = channel.unary_unary(
          '/compute.pipeline.PipelineCompute/EndSession',
          request_serializer=SessionContext.SerializeToString,
          response_deserializer=Response.FromString,
          )


  class PipelineComputeServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CreatePipelines(self, request, context):
      """Train step - multiple result messages returned via GRPC streaming.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ExecutePipeline(self, request, context):
      """Predict step - multiple results messages returned via GRPC streaming.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StartSession(self, request, context):
      """Session management
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def EndSession(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_PipelineComputeServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreatePipelines': grpc.unary_stream_rpc_method_handler(
            servicer.CreatePipelines,
            request_deserializer=PipelineCreateRequest.FromString,
            response_serializer=PipelineCreateResult.SerializeToString,
        ),
        'ExecutePipeline': grpc.unary_stream_rpc_method_handler(
            servicer.ExecutePipeline,
            request_deserializer=PipelineExecuteRequest.FromString,
            response_serializer=PipelineExecuteResult.SerializeToString,
        ),
        'StartSession': grpc.unary_unary_rpc_method_handler(
            servicer.StartSession,
            request_deserializer=SessionRequest.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'EndSession': grpc.unary_unary_rpc_method_handler(
            servicer.EndSession,
            request_deserializer=SessionContext.FromString,
            response_serializer=Response.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'compute.pipeline.PipelineCompute', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaPipelineComputeServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreatePipelines(self, request, context):
      """Train step - multiple result messages returned via GRPC streaming.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ExecutePipeline(self, request, context):
      """Predict step - multiple results messages returned via GRPC streaming.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StartSession(self, request, context):
      """Session management
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def EndSession(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaPipelineComputeStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreatePipelines(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Train step - multiple result messages returned via GRPC streaming.
      """
      raise NotImplementedError()
    def ExecutePipeline(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Predict step - multiple results messages returned via GRPC streaming.
      """
      raise NotImplementedError()
    def StartSession(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Session management
      """
      raise NotImplementedError()
    StartSession.future = None
    def EndSession(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    EndSession.future = None


  def beta_create_PipelineCompute_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('compute.pipeline.PipelineCompute', 'CreatePipelines'): PipelineCreateRequest.FromString,
      ('compute.pipeline.PipelineCompute', 'EndSession'): SessionContext.FromString,
      ('compute.pipeline.PipelineCompute', 'ExecutePipeline'): PipelineExecuteRequest.FromString,
      ('compute.pipeline.PipelineCompute', 'StartSession'): SessionRequest.FromString,
    }
    response_serializers = {
      ('compute.pipeline.PipelineCompute', 'CreatePipelines'): PipelineCreateResult.SerializeToString,
      ('compute.pipeline.PipelineCompute', 'EndSession'): Response.SerializeToString,
      ('compute.pipeline.PipelineCompute', 'ExecutePipeline'): PipelineExecuteResult.SerializeToString,
      ('compute.pipeline.PipelineCompute', 'StartSession'): Response.SerializeToString,
    }
    method_implementations = {
      ('compute.pipeline.PipelineCompute', 'CreatePipelines'): face_utilities.unary_stream_inline(servicer.CreatePipelines),
      ('compute.pipeline.PipelineCompute', 'EndSession'): face_utilities.unary_unary_inline(servicer.EndSession),
      ('compute.pipeline.PipelineCompute', 'ExecutePipeline'): face_utilities.unary_stream_inline(servicer.ExecutePipeline),
      ('compute.pipeline.PipelineCompute', 'StartSession'): face_utilities.unary_unary_inline(servicer.StartSession),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_PipelineCompute_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('compute.pipeline.PipelineCompute', 'CreatePipelines'): PipelineCreateRequest.SerializeToString,
      ('compute.pipeline.PipelineCompute', 'EndSession'): SessionContext.SerializeToString,
      ('compute.pipeline.PipelineCompute', 'ExecutePipeline'): PipelineExecuteRequest.SerializeToString,
      ('compute.pipeline.PipelineCompute', 'StartSession'): SessionRequest.SerializeToString,
    }
    response_deserializers = {
      ('compute.pipeline.PipelineCompute', 'CreatePipelines'): PipelineCreateResult.FromString,
      ('compute.pipeline.PipelineCompute', 'EndSession'): Response.FromString,
      ('compute.pipeline.PipelineCompute', 'ExecutePipeline'): PipelineExecuteResult.FromString,
      ('compute.pipeline.PipelineCompute', 'StartSession'): Response.FromString,
    }
    cardinalities = {
      'CreatePipelines': cardinality.Cardinality.UNARY_STREAM,
      'EndSession': cardinality.Cardinality.UNARY_UNARY,
      'ExecutePipeline': cardinality.Cardinality.UNARY_STREAM,
      'StartSession': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'compute.pipeline.PipelineCompute', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
