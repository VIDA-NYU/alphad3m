{
    "CLASSIFICATION": [
        "d3m.primitives.classification.ada_boost.SKlearn",
        "d3m.primitives.classification.bagging.SKlearn",
        "d3m.primitives.classification.bernoulli_naive_bayes.SKlearn",
        "d3m.primitives.classification.decision_tree.SKlearn",
        "d3m.primitives.classification.dummy.SKlearn",
        "d3m.primitives.classification.extra_trees.SKlearn",
        "d3m.primitives.classification.gaussian_naive_bayes.SKlearn",
        "d3m.primitives.classification.gradient_boosting.SKlearn",
        "d3m.primitives.classification.k_neighbors.SKlearn",
        "d3m.primitives.classification.linear_discriminant_analysis.SKlearn",
        "d3m.primitives.classification.linear_svc.SKlearn",
        "d3m.primitives.classification.logistic_regression.SKlearn",
        "d3m.primitives.classification.mlp.SKlearn",
        "d3m.primitives.classification.multinomial_naive_bayes.SKlearn",
        "d3m.primitives.classification.nearest_centroid.SKlearn",
        "d3m.primitives.classification.passive_aggressive.SKlearn",
        "d3m.primitives.classification.quadratic_discriminant_analysis.SKlearn",
        "d3m.primitives.classification.random_forest.SKlearn",
        "d3m.primitives.classification.sgd.SKlearn",
        "d3m.primitives.classification.svc.SKlearn",
        "d3m.primitives.classification.cover_tree.Fastlvm",
        "d3m.primitives.classification.light_gbm.Common",
        "d3m.primitives.classification.lstm.DSBOX",
        "d3m.primitives.classification.mlp.BBNMLPClassifier",
        "d3m.primitives.classification.random_forest.Common",
        "d3m.primitives.classification.xgboost_dart.Common",
        "d3m.primitives.classification.xgboost_gbtree.Common"
    ],
    "IMPUTATION": [
        "d3m.primitives.data_cleaning.imputer.SKlearn",
        "d3m.primitives.data_preprocessing.greedy_imputation.DSBOX",
        "d3m.primitives.data_preprocessing.iterative_regression_imputation.DSBOX",
        "d3m.primitives.data_preprocessing.mean_imputation.DSBOX",
        "d3m.primitives.data_preprocessing.random_sampling_imputer.BYU",
        "d3m.primitives.data_transformation.imputer.DistilCategoricalImputer"
    ],
    "TEXT_ENCODER": [
        "d3m.primitives.data_preprocessing.count_vectorizer.SKlearn",
        "d3m.primitives.data_preprocessing.tfidf_vectorizer.SKlearn",
        "d3m.primitives.data_transformation.encoder.DistilTextEncoder",
        "d3m.primitives.feature_construction.corex_text.DSBOX"
    ],
    "FEATURE_SELECTION": [
        "d3m.primitives.data_preprocessing.feature_agglomeration.SKlearn",
        "d3m.primitives.feature_selection.generic_univariate_select.SKlearn",
        "d3m.primitives.feature_selection.select_fwe.SKlearn",
        "d3m.primitives.feature_selection.select_percentile.SKlearn",
        "d3m.primitives.feature_selection.variance_threshold.SKlearn",
        "d3m.primitives.feature_selection.joint_mutual_information.AutoRPI",
        "d3m.primitives.feature_selection.pca_features.Pcafeatures",
        "d3m.primitives.feature_selection.score_based_markov_blanket.RPI",
        "d3m.primitives.feature_selection.simultaneous_markov_blanket.AutoRPI",
        "d3m.primitives.feature_selection.skfeature.TAMU"
    ],
    "FEATURE_SCALING": [
        "d3m.primitives.data_preprocessing.max_abs_scaler.SKlearn",
        "d3m.primitives.data_preprocessing.min_max_scaler.SKlearn",
        "d3m.primitives.data_preprocessing.normalizer.SKlearn",
        "d3m.primitives.data_preprocessing.quantile_transformer.SKlearn",
        "d3m.primitives.data_preprocessing.robust_scaler.SKlearn",
        "d3m.primitives.data_preprocessing.standard_scaler.SKlearn",
        "d3m.primitives.normalization.iqr_scaler.DSBOX"
    ],
    "KERNEL_METHOD": [
        "d3m.primitives.data_preprocessing.nystroem.SKlearn",
        "d3m.primitives.data_preprocessing.rbf_sampler.SKlearn"
    ],
    "STATISTICAL_MOMENT_ANALYSIS": [
        "d3m.primitives.data_preprocessing.polynomial_features.SKlearn"
    ],
    "RANDOM_FOREST": [
        "d3m.primitives.data_preprocessing.random_trees_embedding.SKlearn"
    ],
    "DIMENSIONALITY_REDUCTION": [
        "d3m.primitives.data_preprocessing.truncated_svd.SKlearn",
        "d3m.primitives.feature_extraction.pca.SKlearn",
        "d3m.primitives.dimensionality_reduction.principal_component_analysis.UBC",
        "d3m.primitives.feature_extraction.pca_features.RandomizedPolyPCA"
    ],
    "PRINCIPAL_COMPONENT_ANALYSIS": [
        "d3m.primitives.data_transformation.fast_ica.SKlearn"
    ],
    "CATEGORICAL_ENCODER": [
        "d3m.primitives.data_transformation.one_hot_encoder.SKlearn",
        "d3m.primitives.data_preprocessing.encoder.DSBOX",
        "d3m.primitives.data_transformation.one_hot_encoder.DistilOneHotEncoder"
    ],
    "CATEGORY_ENCODER": [
        "d3m.primitives.data_transformation.ordinal_encoder.SKlearn",
        "d3m.primitives.data_preprocessing.label_decoder.Common",
        "d3m.primitives.data_preprocessing.label_encoder.Common"
    ],
    "FEATURE_EXTRACTION": [
        "d3m.primitives.feature_extraction.kernel_pca.SKlearn",
        "d3m.primitives.feature_extraction.audio_transfer.DistilAudioTransfer",
        "d3m.primitives.feature_extraction.convolutional_neural_network.UBC",
        "d3m.primitives.feature_extraction.googlenet_cnn.UBC",
        "d3m.primitives.feature_extraction.image_transfer.DistilImageTransfer",
        "d3m.primitives.feature_extraction.inceptionV3_image_feature.DSBOX",
        "d3m.primitives.feature_extraction.mobilenet_cnn.UBC",
        "d3m.primitives.feature_extraction.multitable_featurization.DSBOX",
        "d3m.primitives.feature_extraction.random_projection_timeseries_featurization.DSBOX",
        "d3m.primitives.feature_extraction.resnet50_image_feature.DSBOX",
        "d3m.primitives.feature_extraction.resnet_cnn.UBC",
        "d3m.primitives.feature_extraction.resnext101_kinetics_video_features.VideoFeaturizer",
        "d3m.primitives.feature_extraction.signal_mfcc.SignalMFCC",
        "d3m.primitives.feature_extraction.sparse_pca.RobustSparsePCA",
        "d3m.primitives.feature_extraction.sparse_pca.SparsePCA",
        "d3m.primitives.feature_extraction.vgg16_image_feature.DSBOX",
        "d3m.primitives.feature_extraction.vggnet_cnn.UBC"
    ],
    "REGRESSION": [
        "d3m.primitives.regression.ada_boost.SKlearn",
        "d3m.primitives.regression.ard.SKlearn",
        "d3m.primitives.regression.bagging.SKlearn",
        "d3m.primitives.regression.decision_tree.SKlearn",
        "d3m.primitives.regression.dummy.SKlearn",
        "d3m.primitives.regression.elastic_net.SKlearn",
        "d3m.primitives.regression.extra_trees.SKlearn",
        "d3m.primitives.regression.gaussian_process.SKlearn",
        "d3m.primitives.regression.gradient_boosting.SKlearn",
        "d3m.primitives.regression.k_neighbors.SKlearn",
        "d3m.primitives.regression.kernel_ridge.SKlearn",
        "d3m.primitives.regression.lars.SKlearn",
        "d3m.primitives.regression.lasso.SKlearn",
        "d3m.primitives.regression.lasso_cv.SKlearn",
        "d3m.primitives.regression.linear.SKlearn",
        "d3m.primitives.regression.linear_svr.SKlearn",
        "d3m.primitives.regression.mlp.SKlearn",
        "d3m.primitives.regression.passive_aggressive.SKlearn",
        "d3m.primitives.regression.random_forest.SKlearn",
        "d3m.primitives.regression.ridge.SKlearn",
        "d3m.primitives.regression.sgd.SKlearn",
        "d3m.primitives.regression.svr.SKlearn",
        "d3m.primitives.regression.cover_tree.Fastlvm",
        "d3m.primitives.regression.echo_linear.DSBOX",
        "d3m.primitives.regression.monomial.Test",
        "d3m.primitives.regression.rfm_precondition_ed_gaussian_krr.RFMPreconditionedGaussianKRR",
        "d3m.primitives.regression.rfm_precondition_ed_polynomial_krr.RFMPreconditionedPolynomialKRR",
        "d3m.primitives.regression.tensor_machines_regularized_least_squares.TensorMachinesRegularizedLeastSquares",
        "d3m.primitives.regression.xgboost_gbtree.Common"
    ],
    "TEXT_CLASSIFIER": [
        "d3m.primitives.classification.bert_classifier.DistilBertPairClassification",
        "d3m.primitives.classification.text_classifier.DistilTextClassifier"
    ],
    "ENSEMBLE_LEARNING": [
        "d3m.primitives.classification.ensemble_voting.DSBOX",
        "d3m.primitives.data_transformation.conditioner.StaticEnsembler"
    ],
    "CLUSTERING": [
        "d3m.primitives.clustering.cluster_curve_fitting_kmeans.ClusterCurveFittingKMeans",
        "d3m.primitives.clustering.gmm.Fastlvm",
        "d3m.primitives.clustering.hdbscan.Hdbscan",
        "d3m.primitives.clustering.k_means.DistilKMeans",
        "d3m.primitives.clustering.k_means.Fastlvm",
        "d3m.primitives.clustering.k_means.Sloth",
        "d3m.primitives.clustering.kmeans_clustering.UBC",
        "d3m.primitives.clustering.spectral_graph.SpectralClustering"
    ],
    "COLLABORATIVE_FILTERING": [
        "d3m.primitives.collaborative_filtering.collaborative_filtering_link_prediction.DistilCollaborativeFiltering"
    ],
    "COMMUNITY_DETECTION": [
        "d3m.primitives.community_detection.community_detection.DistilCommunityDetection"
    ],
    "DATA_AUGMENTATION": [
        "d3m.primitives.data_augmentation.datamart_augmentation.Common",
        "d3m.primitives.data_augmentation.datamart_download.Common"
    ],
    "DATA_RETRIEVAL": [
        "d3m.primitives.data_cleaning.clean_augmentation.AutonBox"
    ],
    "DATETIME_ENCODER": [
        "d3m.primitives.data_cleaning.cleaning_featurizer.DSBOX",
        "d3m.primitives.data_transformation.data_cleaning.DistilEnrichDates"
    ],
    "CONVOLUTIONAL_NEURAL_NETWORK": [
        "d3m.primitives.data_cleaning.column_type_profiler.Simon"
    ],
    "DATA_STRUCTURE_ALIGNMENT": [
        "d3m.primitives.data_cleaning.data_cleaning.Datacleaning"
    ],
    "NUMERICAL_METHOD": [
        "d3m.primitives.data_cleaning.geocoding.Goat_forward",
        "d3m.primitives.data_cleaning.geocoding.Goat_reverse",
        "d3m.primitives.data_preprocessing.dataframe_to_tensor.DSBOX",
        "d3m.primitives.data_preprocessing.do_nothing.DSBOX",
        "d3m.primitives.data_preprocessing.do_nothing_for_dataset.DSBOX"
    ],
    "DATA_NORMALIZATION": [
        "d3m.primitives.data_cleaning.label_encoder.DSBOX"
    ],
    "RECURRENT_NEURAL_NETWORK": [
        "d3m.primitives.data_cleaning.text_summarization.Duke"
    ],
    "DATA_GENERATION": [
        "d3m.primitives.data_generation.random.Test"
    ],
    "DATA_CONVERSION": [
        "d3m.primitives.data_preprocessing.audio_reader.AudioReader",
        "d3m.primitives.data_preprocessing.csv_reader.CSVReader",
        "d3m.primitives.data_preprocessing.horizontal_concat.DSBOX",
        "d3m.primitives.data_preprocessing.targets_reader.TargetsReader",
        "d3m.primitives.data_preprocessing.time_series_to_list.DSBOX",
        "d3m.primitives.data_preprocessing.vertical_concatenate.DSBOX",
        "d3m.primitives.data_transformation.add_semantic_types.Common",
        "d3m.primitives.data_transformation.cast_to_type.Common",
        "d3m.primitives.data_transformation.column_parser.Common",
        "d3m.primitives.data_transformation.conditioner.Conditioner",
        "d3m.primitives.data_transformation.construct_predictions.Common",
        "d3m.primitives.data_transformation.dataframe_sampling.TAMU",
        "d3m.primitives.data_transformation.dataframe_to_list.Common",
        "d3m.primitives.data_transformation.dataframe_to_ndarray.Common",
        "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
        "d3m.primitives.data_transformation.datetime_field_compose.Common",
        "d3m.primitives.data_transformation.grouping_field_compose.Common",
        "d3m.primitives.data_transformation.i_vector_extractor.IVectorExtractor",
        "d3m.primitives.data_transformation.list_to_dataframe.Common",
        "d3m.primitives.data_transformation.list_to_dataframe.DistilListEncoder",
        "d3m.primitives.data_transformation.list_to_ndarray.Common",
        "d3m.primitives.data_transformation.load_edgelist.DistilEdgeListLoader",
        "d3m.primitives.data_transformation.load_graphs.DistilGraphLoader",
        "d3m.primitives.data_transformation.load_graphs.JHU",
        "d3m.primitives.data_transformation.load_single_graph.DistilSingleGraphLoader",
        "d3m.primitives.data_transformation.merge_partial_predictions.AutonBox",
        "d3m.primitives.data_transformation.ndarray_to_dataframe.Common",
        "d3m.primitives.data_transformation.ndarray_to_list.Common",
        "d3m.primitives.data_transformation.prediction_expansion.DistilPredictionExpansion",
        "d3m.primitives.data_transformation.remove_semantic_types.Common",
        "d3m.primitives.data_transformation.rename_duplicate_name.DataFrameCommon",
        "d3m.primitives.data_transformation.replace_semantic_types.Common",
        "d3m.primitives.data_transformation.simple_column_parser.DataFrameCommon",
        "d3m.primitives.data_transformation.to_numeric.DSBOX"
    ],
    "FILE_MANIPULATION": [
        "d3m.primitives.data_preprocessing.audio_reader.Common",
        "d3m.primitives.data_preprocessing.audio_reader.DistilAudioDatasetLoader",
        "d3m.primitives.data_preprocessing.csv_reader.Common",
        "d3m.primitives.data_preprocessing.data_cleaning.DistilTimeSeriesFormatter",
        "d3m.primitives.data_preprocessing.dataset_text_reader.DatasetTextReader",
        "d3m.primitives.data_preprocessing.image_reader.Common",
        "d3m.primitives.data_preprocessing.satellite_image_loader.DistilSatelliteImageLoader",
        "d3m.primitives.data_preprocessing.text_reader.Common",
        "d3m.primitives.data_preprocessing.video_reader.Common"
    ],
    "AUDIO_MIXING": [
        "d3m.primitives.data_preprocessing.channel_averager.ChannelAverager"
    ],
    "DATA_SPLITTING": [
        "d3m.primitives.data_preprocessing.dataset_sample.Common",
        "d3m.primitives.data_preprocessing.splitter.DSBOX"
    ],
    "ARRAY_SLICING": [
        "d3m.primitives.data_preprocessing.datetime_range_filter.Common",
        "d3m.primitives.data_preprocessing.numeric_range_filter.Common",
        "d3m.primitives.data_preprocessing.regex_filter.Common",
        "d3m.primitives.data_preprocessing.term_filter.Common",
        "d3m.primitives.data_transformation.cut_audio.Common",
        "d3m.primitives.data_transformation.dataframe_list_extractor.TAMU",
        "d3m.primitives.data_transformation.extract_columns.Common",
        "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
        "d3m.primitives.data_transformation.extract_columns_by_structural_types.Common",
        "d3m.primitives.data_transformation.remove_columns.Common",
        "d3m.primitives.data_transformation.remove_duplicate_columns.Common"
    ],
    "DATA_DENORMALIZATION": [
        "d3m.primitives.data_preprocessing.flatten.DataFrameCommon",
        "d3m.primitives.data_transformation.denormalize.Common"
    ],
    "NONOVERLAPPING_COMMUNITY_DETECTION": [
        "d3m.primitives.data_preprocessing.largest_connected_component.JHU"
    ],
    "SIGNAL_DITHERING": [
        "d3m.primitives.data_preprocessing.signal_dither.SignalDither"
    ],
    "SINGULAR_VALUE_DECOMPOSITION": [
        "d3m.primitives.data_transformation.adjacency_spectral_embedding.JHU"
    ],
    "ENCODE_BINARY": [
        "d3m.primitives.data_transformation.data_cleaning.DistilReplaceSingletons",
        "d3m.primitives.data_transformation.data_cleaning.OutputDataframe",
        "d3m.primitives.data_transformation.encoder.DistilBinaryEncoder"
    ],
    "ARRAY_CONCATENATION": [
        "d3m.primitives.data_transformation.horizontal_concat.DataFrameCommon",
        "d3m.primitives.data_transformation.horizontal_concat.TAMU",
        "d3m.primitives.data_transformation.ravel.DataFrameRowCommon",
        "d3m.primitives.data_transformation.stack_ndarray_column.Common"
    ],
    "HIGHER_ORDER_SINGULAR_VALUE_DECOMPOSITION": [
        "d3m.primitives.data_transformation.laplacian_spectral_embedding.JHU"
    ],
    "PARAMETRIC_TRAJECTORY_MODELING": [
        "d3m.primitives.data_transformation.segment_curve_fitter.SegmentCurveFitter"
    ],
    "DATA_PROFILING": [
        "d3m.primitives.data_transformation.sequence_to_bag_of_tokens.SequenceToBagOfTokens"
    ],
    "DATA_WRANGLING": [
        "d3m.primitives.data_wrangling.batching.TAMU"
    ],
    "EVALUATION": [
        "d3m.primitives.evaluation.compute_scores.Core",
        "d3m.primitives.evaluation.compute_scores.Test",
        "d3m.primitives.evaluation.fixed_split_dataset_split.Commmon",
        "d3m.primitives.evaluation.kfold_dataset_split.Common",
        "d3m.primitives.evaluation.kfold_time_series_split.Common",
        "d3m.primitives.evaluation.no_split_dataset_split.Common",
        "d3m.primitives.evaluation.redact_columns.Common",
        "d3m.primitives.evaluation.train_score_dataset_split.Common"
    ],
    "FEATURE_CONSTRUCTION": [
        "d3m.primitives.feature_construction.categorical_selector.TPOT",
        "d3m.primitives.feature_construction.continous_selector.TPOT",
        "d3m.primitives.feature_construction.corex_continuous.DSBOX",
        "d3m.primitives.feature_construction.echo_ib.DSBOX",
        "d3m.primitives.feature_construction.gcn_mixhop.DSBOX",
        "d3m.primitives.feature_construction.sdne.DSBOX",
        "d3m.primitives.feature_construction.zero_count.TPOT"
    ],
    "OBJECT_DETECTION": [
        "d3m.primitives.feature_extraction.yolo.DSBOX",
        "d3m.primitives.object_detection.retina_net.ObjectDetectionRN"
    ],
    "GRAPH_CLUSTERING": [
        "d3m.primitives.graph_clustering.gaussian_clustering.JHU"
    ],
    "GRAPH_MATCHING": [
        "d3m.primitives.graph_matching.seeded_graph_matching.DistilSeededGraphMatcher",
        "d3m.primitives.graph_matching.seeded_graph_matching.JHU"
    ],
    "LAYER": [
        "d3m.primitives.layer.add.KerasWrap",
        "d3m.primitives.layer.average_pooling_1d.KerasWrap",
        "d3m.primitives.layer.average_pooling_2d.KerasWrap",
        "d3m.primitives.layer.average_pooling_3d.KerasWrap",
        "d3m.primitives.layer.batch_normalization.KerasWrap",
        "d3m.primitives.layer.concat.KerasWrap",
        "d3m.primitives.layer.convolution_1d.KerasWrap",
        "d3m.primitives.layer.convolution_2d.KerasWrap",
        "d3m.primitives.layer.convolution_3d.KerasWrap",
        "d3m.primitives.layer.dense.KerasWrap",
        "d3m.primitives.layer.dropout.KerasWrap",
        "d3m.primitives.layer.flatten.KerasWrap",
        "d3m.primitives.layer.global_average_pooling_1d.KerasWrap",
        "d3m.primitives.layer.global_average_pooling_2d.KerasWrap",
        "d3m.primitives.layer.global_average_pooling_3d.KerasWrap",
        "d3m.primitives.layer.max_pooling_1d.KerasWrap",
        "d3m.primitives.layer.max_pooling_2d.KerasWrap",
        "d3m.primitives.layer.max_pooling_3d.KerasWrap",
        "d3m.primitives.layer.null.KerasWrap",
        "d3m.primitives.layer.subtract.KerasWrap"
    ],
    "LEARNER": [
        "d3m.primitives.learner.model.GeneralRelational",
        "d3m.primitives.learner.model.KerasWrap",
        "d3m.primitives.learner.random_forest.DistilEnsembleForest"
    ],
    "LINK_PREDICTION": [
        "d3m.primitives.link_prediction.data_conversion.JHU",
        "d3m.primitives.link_prediction.link_prediction.DistilLinkPrediction",
        "d3m.primitives.link_prediction.rank_classification.JHU"
    ],
    "LOSS_FUNCTION": [
        "d3m.primitives.loss_function.binary_crossentropy.KerasWrap",
        "d3m.primitives.loss_function.categorical_accuracy.KerasWrap",
        "d3m.primitives.loss_function.categorical_crossentropy.KerasWrap",
        "d3m.primitives.loss_function.categorical_hinge.KerasWrap",
        "d3m.primitives.loss_function.cosine_proximity.KerasWrap",
        "d3m.primitives.loss_function.hinge.KerasWrap",
        "d3m.primitives.loss_function.kullback_leibler_divergence.KerasWrap",
        "d3m.primitives.loss_function.logcosh.KerasWrap",
        "d3m.primitives.loss_function.mean_absolute_error.KerasWrap",
        "d3m.primitives.loss_function.mean_absolute_percentage_error.KerasWrap",
        "d3m.primitives.loss_function.mean_squared_error.KerasWrap",
        "d3m.primitives.loss_function.mean_squared_logarithmic_error.KerasWrap",
        "d3m.primitives.loss_function.poisson.KerasWrap",
        "d3m.primitives.loss_function.sparse_categorical_crossentropy.KerasWrap",
        "d3m.primitives.loss_function.squared_hinge.KerasWrap"
    ],
    "METALEARNING": [
        "d3m.primitives.metalearning.metafeature_extractor.BYU",
        "d3m.primitives.metalearning.metafeature_extractor.Common"
    ],
    "NATURAL_LANGUAGE_PROCESSING": [
        "d3m.primitives.data_preprocessing.count_vectorizer.SKlearn",
        "d3m.primitives.data_preprocessing.tfidf_vectorizer.SKlearn",
        "d3m.primitives.data_transformation.encoder.DistilTextEncoder",
        "d3m.primitives.feature_construction.corex_text.DSBOX",
        "d3m.primitives.natural_language_processing.glda.Fastlvm",
        "d3m.primitives.natural_language_processing.hdp.Fastlvm",
        "d3m.primitives.natural_language_processing.lda.Fastlvm"
    ],
    "OPERATOR": [
        "d3m.primitives.operator.column_map.Common",
        "d3m.primitives.operator.dataset_map.DataFrameCommon",
        "d3m.primitives.operator.diagonal_mvn.UBC",
        "d3m.primitives.operator.increment.Test",
        "d3m.primitives.operator.null.TransformerTest",
        "d3m.primitives.operator.null.UnsupervisedLearnerTest",
        "d3m.primitives.operator.primitive_sum.Test",
        "d3m.primitives.operator.sum.Test"
    ],
    "REMOTE_SENSING": [
        "d3m.primitives.remote_sensing.remote_sensing_pretrained.RemoteSensingPretrained"
    ],
    "SCHEMA_DISCOVERY": [
        "d3m.primitives.schema_discovery.profiler.BYU",
        "d3m.primitives.schema_discovery.profiler.Common",
        "d3m.primitives.schema_discovery.profiler.DSBOX",
        "d3m.primitives.schema_discovery.semantic_type.UBC"
    ],
    "SEMISUPERVISED_CLASSIFICATION": [
        "d3m.primitives.semisupervised_classification.iterative_labeling.AutonBox"
    ],
    "TIME_SERIES_CLASSIFICATION": [
        "d3m.primitives.time_series_classification.convolutional_neural_net.LSTM_FCN",
        "d3m.primitives.time_series_classification.k_neighbors.Kanine"
    ],
    "TIME_SERIES_FORECASTING": [
        "d3m.primitives.time_series_forecasting.arima.DSBOX",
        "d3m.primitives.time_series_forecasting.esrnn.RNN",
        "d3m.primitives.time_series_forecasting.lstm.DeepAR",
        "d3m.primitives.time_series_forecasting.vector_autoregression.VAR"
    ],
    "TIME_SERIES_SEGMENTATION": [
        "d3m.primitives.time_series_segmentation.signal_framer.SignalFramer",
        "d3m.primitives.time_series_segmentation.uniform_segmentation.UniformSegmentation"
    ],
    "VERTEX_NOMINATION": [
        "d3m.primitives.vertex_nomination.vertex_nomination.DistilVertexNomination"
    ]
}