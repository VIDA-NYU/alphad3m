{
    "CLASSIFICATION": {
        "d3m.primitives.classification.ada_boost.SKlearn": 1,
        "d3m.primitives.classification.bagging.SKlearn": 2,
        "d3m.primitives.classification.bernoulli_naive_bayes.SKlearn": 3,
        "d3m.primitives.classification.cover_tree.Fastlvm": 6,
        "d3m.primitives.classification.decision_tree.SKlearn": 7,
        "d3m.primitives.classification.dummy.SKlearn": 8,
        "d3m.primitives.classification.extra_trees.SKlearn": 10,
        "d3m.primitives.classification.gaussian_naive_bayes.SKlearn": 12,
        "d3m.primitives.classification.general_relational_dataset.GeneralRelationalDataset": 13,
        "d3m.primitives.classification.global_causal_discovery.RPI": 14,
        "d3m.primitives.classification.gradient_boosting.SKlearn": 15,
        "d3m.primitives.classification.k_neighbors.SKlearn": 17,
        "d3m.primitives.classification.light_gbm.Common": 18,
        "d3m.primitives.classification.linear_discriminant_analysis.SKlearn": 19,
        "d3m.primitives.classification.linear_svc.SKlearn": 20,
        "d3m.primitives.classification.logistic_regression.SKlearn": 21,
        "d3m.primitives.classification.lstm.DSBOX": 23,
        "d3m.primitives.classification.mlp.BBNMLPClassifier": 24,
        "d3m.primitives.classification.mlp.SKlearn": 25,
        "d3m.primitives.classification.multilayer_perceptron.UBC": 26,
        "d3m.primitives.classification.multinomial_naive_bayes.SKlearn": 27,
        "d3m.primitives.classification.nearest_centroid.SKlearn": 28,
        "d3m.primitives.classification.passive_aggressive.SKlearn": 29,
        "d3m.primitives.classification.quadratic_discriminant_analysis.SKlearn": 30,
        "d3m.primitives.classification.random_classifier.Test": 31,
        "d3m.primitives.classification.random_forest.Common": 32,
        "d3m.primitives.classification.random_forest.SKlearn": 33,
        "d3m.primitives.classification.search.Find_projections": 34,
        "d3m.primitives.classification.search_hybrid.Find_projections": 35,
        "d3m.primitives.classification.sgd.SKlearn": 36,
        "d3m.primitives.classification.simple_cnaps.UBC": 37,
        "d3m.primitives.classification.svc.SKlearn": 38,
        "d3m.primitives.classification.xgboost_dart.Common": 42,
        "d3m.primitives.classification.xgboost_gbtree.Common": 43
    },
    "DATA_PREPROCESSING": {
        "d3m.primitives.classification.ensemble_voting.DSBOX": 9,
        "d3m.primitives.data_preprocessing.binarizer.SKlearn": 68,
        "d3m.primitives.data_preprocessing.channel_averager.ChannelAverager": 69,
        "d3m.primitives.data_preprocessing.count_vectorizer.SKlearn": 70,
        "d3m.primitives.data_preprocessing.encoder.DSBOX": 73,
        "d3m.primitives.data_preprocessing.feature_agglomeration.SKlearn": 74,
        "d3m.primitives.data_preprocessing.greedy_imputation.DSBOX": 75,
        "d3m.primitives.data_preprocessing.iterative_regression_imputation.DSBOX": 76,
        "d3m.primitives.data_preprocessing.label_encoder.Common": 78,
        "d3m.primitives.data_preprocessing.max_abs_scaler.SKlearn": 80,
        "d3m.primitives.data_preprocessing.mean_imputation.DSBOX": 81,
        "d3m.primitives.data_preprocessing.min_max_scaler.SKlearn": 82,
        "d3m.primitives.data_preprocessing.normalizer.SKlearn": 83,
        "d3m.primitives.data_preprocessing.numeric_range_filter.Common": 84,
        "d3m.primitives.data_preprocessing.nystroem.SKlearn": 85,
        "d3m.primitives.data_preprocessing.one_hot_encoder.MakerCommon": 86,
        "d3m.primitives.data_preprocessing.one_hot_encoder.PandasCommon": 87,
        "d3m.primitives.data_preprocessing.polynomial_features.SKlearn": 88,
        "d3m.primitives.data_preprocessing.quantile_transformer.SKlearn": 89,
        "d3m.primitives.data_preprocessing.random_trees_embedding.SKlearn": 91,
        "d3m.primitives.data_preprocessing.robust_scaler.SKlearn": 94,
        "d3m.primitives.data_preprocessing.splitter.DSBOX": 97,
        "d3m.primitives.data_preprocessing.standard_scaler.SKlearn": 98,
        "d3m.primitives.data_preprocessing.term_filter.Common": 100,
        "d3m.primitives.data_preprocessing.unary_encoder.DSBOX": 101,
        "d3m.primitives.feature_selection.mutual_info_classif.DistilMIRanking": 206
    },
    "VERTEX_CLASSIFICATION": {
        "d3m.primitives.classification.vertex_nomination.VertexClassification": 41
    },
    "CLUSTERING": {
        "d3m.primitives.clustering.cluster_curve_fitting_kmeans.ClusterCurveFittingKMeans": 44,
        "d3m.primitives.clustering.gmm.Fastlvm": 45,
        "d3m.primitives.clustering.hdbscan.Hdbscan": 46,
        "d3m.primitives.clustering.k_means.DistilKMeans": 47,
        "d3m.primitives.clustering.k_means.Fastlvm": 48,
        "d3m.primitives.clustering.k_means.Sloth": 49,
        "d3m.primitives.clustering.kmeans_clustering.UBC": 50,
        "d3m.primitives.clustering.spectral_graph.SpectralClustering": 51
    },
    "COLLABORATIVE_FILTERING": {
        "d3m.primitives.collaborative_filtering.collaborative_filtering_link_prediction.DistilCollaborativeFiltering": 52
    },
    "COMMUNITY_DETECTION": {
        "d3m.primitives.community_detection.community_detection.DistilCommunityDetection": 53
    },
    "DATA_AUGMENTATION": {
        "d3m.primitives.data_augmentation.datamart_augmentation.Common": 54,
        "d3m.primitives.data_augmentation.datamart_download.Common": 55
    },
    "DATA_CLEANING": {
        "d3m.primitives.data_cleaning.imputer.SKlearn": 60
    },
    "DATA_GENERATION": {
        "d3m.primitives.data_generation.random.Test": 65
    },
    "DATA_TRANSFORMATION": {
        "d3m.primitives.data_transformation.add_semantic_types.Common": 102,
        "d3m.primitives.data_transformation.adjacency_spectral_embedding.JHU": 103,
        "d3m.primitives.data_transformation.cast_to_type.Common": 104,
        "d3m.primitives.data_transformation.column_parser.Common": 105,
        "d3m.primitives.data_transformation.conditioner.Conditioner": 106,
        "d3m.primitives.data_transformation.conditioner.StaticEnsembler": 107,
        "d3m.primitives.data_transformation.construct_predictions.Common": 108,
        "d3m.primitives.data_transformation.cut_audio.Common": 109,
        "d3m.primitives.data_transformation.data_cleaning.DistilEnrichDates": 110,
        "d3m.primitives.data_transformation.data_cleaning.DistilReplaceSingletons": 111,
        "d3m.primitives.data_transformation.data_cleaning.OutputDataframe": 112,
        "d3m.primitives.data_transformation.dataframe_list_extractor.TAMU": 113,
        "d3m.primitives.data_transformation.dataframe_sampling.TAMU": 114,
        "d3m.primitives.data_transformation.dataframe_to_list.Common": 115,
        "d3m.primitives.data_transformation.dataframe_to_ndarray.Common": 116,
        "d3m.primitives.data_transformation.dataset_to_dataframe.Common": 117,
        "d3m.primitives.data_transformation.datetime_field_compose.Common": 118,
        "d3m.primitives.data_transformation.denormalize.Common": 119,
        "d3m.primitives.data_transformation.encoder.DistilBinaryEncoder": 120,
        "d3m.primitives.data_transformation.encoder.DistilTextEncoder": 121,
        "d3m.primitives.data_transformation.extract_columns.Common": 122,
        "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common": 123,
        "d3m.primitives.data_transformation.extract_columns_by_structural_types.Common": 124,
        "d3m.primitives.data_transformation.fast_ica.SKlearn": 125,
        "d3m.primitives.data_transformation.gaussian_random_projection.SKlearn": 126,
        "d3m.primitives.data_transformation.grouping_field_compose.Common": 127,
        "d3m.primitives.data_transformation.horizontal_concat.DataFrameCommon": 128,
        "d3m.primitives.data_transformation.horizontal_concat.TAMU": 129,
        "d3m.primitives.data_transformation.i_vector_extractor.IVectorExtractor": 130,
        "d3m.primitives.data_transformation.imputer.DistilCategoricalImputer": 131,
        "d3m.primitives.data_transformation.laplacian_spectral_embedding.JHU": 132,
        "d3m.primitives.data_transformation.list_to_dataframe.Common": 133,
        "d3m.primitives.data_transformation.list_to_dataframe.DistilListEncoder": 134,
        "d3m.primitives.data_transformation.list_to_ndarray.Common": 135,
        "d3m.primitives.data_transformation.load_edgelist.DistilEdgeListLoader": 136,
        "d3m.primitives.data_transformation.load_graphs.DistilGraphLoader": 137,
        "d3m.primitives.data_transformation.load_graphs.JHU": 138,
        "d3m.primitives.data_transformation.load_single_graph.DistilSingleGraphLoader": 139,
        "d3m.primitives.data_transformation.merge_partial_predictions.AutonBox": 140,
        "d3m.primitives.data_transformation.ndarray_to_dataframe.Common": 141,
        "d3m.primitives.data_transformation.ndarray_to_list.Common": 142,
        "d3m.primitives.data_transformation.one_hot_encoder.DistilOneHotEncoder": 143,
        "d3m.primitives.data_transformation.one_hot_encoder.SKlearn": 144,
        "d3m.primitives.data_transformation.one_hot_encoder.TPOT": 145,
        "d3m.primitives.data_transformation.ordinal_encoder.SKlearn": 146,
        "d3m.primitives.data_transformation.prediction_expansion.DistilPredictionExpansion": 147,
        "d3m.primitives.data_transformation.ravel.DataFrameRowCommon": 148,
        "d3m.primitives.data_transformation.remove_columns.Common": 149,
        "d3m.primitives.data_transformation.remove_duplicate_columns.Common": 150,
        "d3m.primitives.data_transformation.remove_semantic_types.Common": 151,
        "d3m.primitives.data_transformation.rename_duplicate_name.DataFrameCommon": 152,
        "d3m.primitives.data_transformation.replace_semantic_types.Common": 153,
        "d3m.primitives.data_transformation.segment_curve_fitter.SegmentCurveFitter": 154,
        "d3m.primitives.data_transformation.sequence_to_bag_of_tokens.SequenceToBagOfTokens": 155,
        "d3m.primitives.data_transformation.simple_column_parser.DataFrameCommon": 156,
        "d3m.primitives.data_transformation.sparse_random_projection.SKlearn": 157,
        "d3m.primitives.data_transformation.stack_ndarray_column.Common": 158,
        "d3m.primitives.data_transformation.to_numeric.DSBOX": 159,
        "d3m.primitives.data_transformation.vertex_classification_parser.VertexClassificationParser": 160
    },
    "DATA_WRANGLING": {
        "d3m.primitives.data_wrangling.batching.TAMU": 161
    },
    "DIMENSIONALITY_REDUCTION": {
        "d3m.primitives.dimensionality_reduction.principal_component_analysis.UBC": 162,
        "d3m.primitives.dimensionality_reduction.t_distributed_stochastic_neighbor_embedding.Tsne": 163
    },
    "EVALUATION": {
        "d3m.primitives.evaluation.compute_scores.Core": 164,
        "d3m.primitives.evaluation.compute_scores.Test": 165,
        "d3m.primitives.evaluation.fixed_split_dataset_split.Commmon": 166,
        "d3m.primitives.evaluation.kfold_dataset_split.Common": 167,
        "d3m.primitives.evaluation.kfold_time_series_split.Common": 168,
        "d3m.primitives.evaluation.no_split_dataset_split.Common": 169,
        "d3m.primitives.evaluation.redact_columns.Common": 170,
        "d3m.primitives.evaluation.train_score_dataset_split.Common": 171
    },
    "FEATURE_CONSTRUCTION": {
        "d3m.primitives.feature_construction.categorical_selector.TPOT": 172,
        "d3m.primitives.feature_construction.continous_selector.TPOT": 173,
        "d3m.primitives.feature_construction.corex_continuous.DSBOX": 174,
        "d3m.primitives.feature_construction.corex_text.DSBOX": 175,
        "d3m.primitives.feature_construction.echo_ib.DSBOX": 176,
        "d3m.primitives.feature_construction.gcn_mixhop.DSBOX": 177,
        "d3m.primitives.feature_construction.sdne.DSBOX": 178,
        "d3m.primitives.feature_construction.zero_count.TPOT": 179
    },
    "FEATURE_EXTRACTION": {
        "d3m.primitives.feature_extraction.audio_transfer.DistilAudioTransfer": 180,
        "d3m.primitives.feature_extraction.boc.UBC": 181,
        "d3m.primitives.feature_extraction.bow.UBC": 182,
        "d3m.primitives.feature_extraction.image_transfer.DistilImageTransfer": 185,
        "d3m.primitives.feature_extraction.inceptionV3_image_feature.DSBOX": 186,
        "d3m.primitives.feature_extraction.kernel_pca.SKlearn": 187,
        "d3m.primitives.feature_extraction.multitable_featurization.DSBOX": 189,
        "d3m.primitives.feature_extraction.nk_sent2vec.Sent2Vec": 190,
        "d3m.primitives.feature_extraction.pca.SKlearn": 191,
        "d3m.primitives.feature_extraction.pca_features.RandomizedPolyPCA": 192,
        "d3m.primitives.feature_extraction.random_projection_timeseries_featurization.DSBOX": 193,
        "d3m.primitives.feature_extraction.resnet50_image_feature.DSBOX": 194,
        "d3m.primitives.feature_extraction.resnext101_kinetics_video_features.VideoFeaturizer": 196,
        "d3m.primitives.feature_extraction.signal_mfcc.SignalMFCC": 197,
        "d3m.primitives.feature_extraction.sparse_pca.RobustSparsePCA": 198,
        "d3m.primitives.feature_extraction.sparse_pca.SparsePCA": 199,
        "d3m.primitives.feature_extraction.tfidf_vectorizer.BBNTfidfTransformer": 200,
        "d3m.primitives.feature_extraction.vgg16_image_feature.DSBOX": 201,
        "d3m.primitives.feature_extraction.yolo.DSBOX": 203
    },
    "N/A": {
        "d3m.primitives.feature_extraction.convolutional_neural_network.UBC": 183,
        "d3m.primitives.feature_extraction.googlenet_cnn.UBC": 184,
        "d3m.primitives.feature_extraction.mobilenet_cnn.UBC": 188,
        "d3m.primitives.feature_extraction.resnet_cnn.UBC": 195,
        "d3m.primitives.feature_extraction.vggnet_cnn.UBC": 202
    },
    "FEATURE_SELECTION": {
        "d3m.primitives.feature_selection.generic_univariate_select.SKlearn": 204,
        "d3m.primitives.feature_selection.joint_mutual_information.AutoRPI": 205,
        "d3m.primitives.feature_selection.pca_features.Pcafeatures": 207,
        "d3m.primitives.feature_selection.rffeatures.Rffeatures": 208,
        "d3m.primitives.feature_selection.score_based_markov_blanket.RPI": 209,
        "d3m.primitives.feature_selection.select_fwe.SKlearn": 210,
        "d3m.primitives.feature_selection.select_percentile.SKlearn": 211,
        "d3m.primitives.feature_selection.skfeature.TAMU": 212,
        "d3m.primitives.feature_selection.variance_threshold.SKlearn": 213
    },
    "GRAPH_CLUSTERING": {
        "d3m.primitives.graph_clustering.gaussian_clustering.JHU": 214
    },
    "GRAPH_MATCHING": {
        "d3m.primitives.graph_matching.seeded_graph_matching.DistilSeededGraphMatcher": 215,
        "d3m.primitives.graph_matching.seeded_graph_matching.JHU": 216
    },
    "LAYER": {
        "d3m.primitives.layer.add.KerasWrap": 217,
        "d3m.primitives.layer.average_pooling_1d.KerasWrap": 218,
        "d3m.primitives.layer.average_pooling_2d.KerasWrap": 219,
        "d3m.primitives.layer.average_pooling_3d.KerasWrap": 220,
        "d3m.primitives.layer.batch_normalization.KerasWrap": 221,
        "d3m.primitives.layer.concat.KerasWrap": 222,
        "d3m.primitives.layer.convolution_1d.KerasWrap": 223,
        "d3m.primitives.layer.convolution_2d.KerasWrap": 224,
        "d3m.primitives.layer.convolution_3d.KerasWrap": 225,
        "d3m.primitives.layer.dense.KerasWrap": 226,
        "d3m.primitives.layer.dropout.KerasWrap": 227,
        "d3m.primitives.layer.flatten.KerasWrap": 228,
        "d3m.primitives.layer.global_average_pooling_1d.KerasWrap": 229,
        "d3m.primitives.layer.global_average_pooling_2d.KerasWrap": 230,
        "d3m.primitives.layer.global_average_pooling_3d.KerasWrap": 231,
        "d3m.primitives.layer.max_pooling_1d.KerasWrap": 232,
        "d3m.primitives.layer.max_pooling_2d.KerasWrap": 233,
        "d3m.primitives.layer.max_pooling_3d.KerasWrap": 234,
        "d3m.primitives.layer.null.KerasWrap": 235,
        "d3m.primitives.layer.subtract.KerasWrap": 236
    },
    "LEARNER": {
        "d3m.primitives.learner.model.KerasWrap": 237,
        "d3m.primitives.learner.random_forest.DistilEnsembleForest": 238
    },
    "LINK_PREDICTION": {
        "d3m.primitives.link_prediction.data_conversion.JHU": 239,
        "d3m.primitives.link_prediction.link_prediction.DistilLinkPrediction": 240,
        "d3m.primitives.link_prediction.rank_classification.JHU": 241
    },
    "LOSS_FUNCTION": {
        "d3m.primitives.loss_function.binary_crossentropy.KerasWrap": 242,
        "d3m.primitives.loss_function.categorical_accuracy.KerasWrap": 243,
        "d3m.primitives.loss_function.categorical_crossentropy.KerasWrap": 244,
        "d3m.primitives.loss_function.categorical_hinge.KerasWrap": 245,
        "d3m.primitives.loss_function.cosine_proximity.KerasWrap": 246,
        "d3m.primitives.loss_function.hinge.KerasWrap": 247,
        "d3m.primitives.loss_function.kullback_leibler_divergence.KerasWrap": 248,
        "d3m.primitives.loss_function.logcosh.KerasWrap": 249,
        "d3m.primitives.loss_function.mean_absolute_error.KerasWrap": 250,
        "d3m.primitives.loss_function.mean_absolute_percentage_error.KerasWrap": 251,
        "d3m.primitives.loss_function.mean_squared_error.KerasWrap": 252,
        "d3m.primitives.loss_function.mean_squared_logarithmic_error.KerasWrap": 253,
        "d3m.primitives.loss_function.poisson.KerasWrap": 254,
        "d3m.primitives.loss_function.sparse_categorical_crossentropy.KerasWrap": 255,
        "d3m.primitives.loss_function.squared_hinge.KerasWrap": 256
    },
    "METALEARNING": {
        "d3m.primitives.metalearning.metafeature_extractor.BYU": 257,
        "d3m.primitives.metalearning.metafeature_extractor.Common": 258
    },
    "NATURAL_LANGUAGE_PROCESSING": {
        "d3m.primitives.natural_language_processing.glda.Fastlvm": 259,
        "d3m.primitives.natural_language_processing.hdp.Fastlvm": 260,
        "d3m.primitives.natural_language_processing.lda.Fastlvm": 261
    },
    "NORMALIZATION": {
        "d3m.primitives.normalization.iqr_scaler.DSBOX": 262
    },
    "OBJECT_DETECTION": {
        "d3m.primitives.object_detection.retina_net.ObjectDetectionRN": 263
    },
    "OPERATOR": {
        "d3m.primitives.operator.column_map.Common": 264,
        "d3m.primitives.operator.dataset_map.DataFrameCommon": 265,
        "d3m.primitives.operator.diagonal_mvn.UBC": 266,
        "d3m.primitives.operator.increment.Test": 267,
        "d3m.primitives.operator.null.TransformerTest": 268,
        "d3m.primitives.operator.null.UnsupervisedLearnerTest": 269,
        "d3m.primitives.operator.primitive_sum.Test": 270,
        "d3m.primitives.operator.sum.Test": 271
    },
    "REGRESSION": {
        "d3m.primitives.regression.ada_boost.SKlearn": 272,
        "d3m.primitives.regression.ard.SKlearn": 273,
        "d3m.primitives.regression.bagging.SKlearn": 274,
        "d3m.primitives.regression.canonical_correlation_forests.UBC": 275,
        "d3m.primitives.regression.cover_tree.Fastlvm": 276,
        "d3m.primitives.regression.decision_tree.SKlearn": 277,
        "d3m.primitives.regression.dummy.SKlearn": 278,
        "d3m.primitives.regression.echo_linear.DSBOX": 279,
        "d3m.primitives.regression.elastic_net.SKlearn": 280,
        "d3m.primitives.regression.extra_trees.SKlearn": 281,
        "d3m.primitives.regression.gaussian_process.SKlearn": 282,
        "d3m.primitives.regression.gradient_boosting.SKlearn": 283,
        "d3m.primitives.regression.k_neighbors.SKlearn": 284,
        "d3m.primitives.regression.kernel_ridge.SKlearn": 285,
        "d3m.primitives.regression.lars.SKlearn": 286,
        "d3m.primitives.regression.lasso.SKlearn": 287,
        "d3m.primitives.regression.lasso_cv.SKlearn": 288,
        "d3m.primitives.regression.linear.SKlearn": 289,
        "d3m.primitives.regression.linear_regression.UBC": 290,
        "d3m.primitives.regression.linear_svr.SKlearn": 291,
        "d3m.primitives.regression.mlp.SKlearn": 292,
        "d3m.primitives.regression.monomial.Test": 293,
        "d3m.primitives.regression.multilayer_perceptron.UBC": 294,
        "d3m.primitives.regression.passive_aggressive.SKlearn": 295,
        "d3m.primitives.regression.random_forest.SKlearn": 296,
        "d3m.primitives.regression.rfm_precondition_ed_gaussian_krr.RFMPreconditionedGaussianKRR": 297,
        "d3m.primitives.regression.rfm_precondition_ed_polynomial_krr.RFMPreconditionedPolynomialKRR": 298,
        "d3m.primitives.regression.ridge.SKlearn": 299,
        "d3m.primitives.regression.search_hybrid_numeric.Find_projections": 300,
        "d3m.primitives.regression.search_numeric.Find_projections": 301,
        "d3m.primitives.regression.sgd.SKlearn": 302,
        "d3m.primitives.regression.svr.SKlearn": 303,
        "d3m.primitives.regression.tensor_machines_regularized_least_squares.TensorMachinesRegularizedLeastSquares": 304,
        "d3m.primitives.regression.xgboost_gbtree.Common": 305
    },
    "REMOTE_SENSING": {
        "d3m.primitives.remote_sensing.remote_sensing_pretrained.RemoteSensingPretrained": 306
    },
    "SCHEMA_DISCOVERY": {
        "d3m.primitives.schema_discovery.profiler.BYU": 307,
        "d3m.primitives.schema_discovery.profiler.Common": 308,
        "d3m.primitives.schema_discovery.profiler.DSBOX": 309,
        "d3m.primitives.schema_discovery.semantic_type.UBC": 310
    },
    "SEMISUPERVISED_CLASSIFICATION": {
        "d3m.primitives.semisupervised_classification.iterative_labeling.AutonBox": 311
    },
    "TIME_SERIES_CLASSIFICATION": {
        "d3m.primitives.time_series_classification.convolutional_neural_net.LSTM_FCN": 312,
        "d3m.primitives.time_series_classification.k_neighbors.Kanine": 313
    },
    "TIME_SERIES_FORECASTING": {
        "d3m.primitives.time_series_forecasting.arima.DSBOX": 314,
        "d3m.primitives.time_series_forecasting.esrnn.RNN": 315,
        "d3m.primitives.time_series_forecasting.lstm.DeepAR": 316,
        "d3m.primitives.time_series_forecasting.vector_autoregression.VAR": 317
    },
    "TIME_SERIES_SEGMENTATION": {
        "d3m.primitives.time_series_segmentation.signal_framer.SignalFramer": 318,
        "d3m.primitives.time_series_segmentation.uniform_segmentation.UniformSegmentation": 319
    },
    "VERTEX_NOMINATION": {
        "d3m.primitives.vertex_nomination.vertex_nomination.DistilVertexNomination": 320
    },
    "TEXT": {
        "d3m.primitives.data_preprocessing.tfidf_vectorizer.SKlearn": 10,
        "d3m.primitives.data_transformation.encoder.DistilTextEncoder": 11
    }

}