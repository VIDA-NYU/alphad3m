{
    "CLASSIFICATION": {
        "d3m.primitives.classification.ada_boost.SKlearn": 1,
        "d3m.primitives.classification.bagging.SKlearn": 2,
        "d3m.primitives.classification.bernoulli_naive_bayes.SKlearn": 3,
        "d3m.primitives.classification.bert_classifier.DistilBertPairClassification": 4,
        "d3m.primitives.classification.cover_tree.Fastlvm": 6,
        "d3m.primitives.classification.decision_tree.SKlearn": 7,
        "d3m.primitives.classification.dummy.SKlearn": 8,
        "d3m.primitives.classification.extra_trees.SKlearn": 10,
        "d3m.primitives.classification.gaussian_classification.JHU": 11,
        "d3m.primitives.classification.gaussian_classification.MeanBaseline": 12,
        "d3m.primitives.classification.gaussian_naive_bayes.SKlearn": 13,
        "d3m.primitives.classification.gradient_boosting.SKlearn": 15,
        "d3m.primitives.classification.k_neighbors.SKlearn": 16,
        "d3m.primitives.classification.light_gbm.DataFrameCommon": 17,
        "d3m.primitives.classification.linear_discriminant_analysis.SKlearn": 18,
        "d3m.primitives.classification.linear_svc.SKlearn": 19,
        "d3m.primitives.classification.logistic_regression.SKlearn": 20,
        "d3m.primitives.classification.lstm.DSBOX": 21,
        "d3m.primitives.classification.lupi_rf.LupiRFClassifier": 22,
        "d3m.primitives.classification.lupi_rfsel.LupiRFSelClassifier": 23,
        "d3m.primitives.classification.lupi_svm.LupiSvmClassifier": 24,
        "d3m.primitives.classification.mlp.BBN": 25,
        "d3m.primitives.classification.mlp.SKlearn": 26,
        "d3m.primitives.classification.multilabel_classifier.DSBOX": 27,
        "d3m.primitives.classification.multinomial_naive_bayes.SKlearn": 28,
        "d3m.primitives.classification.nearest_centroid.SKlearn": 29,
        "d3m.primitives.classification.passive_aggressive.SKlearn": 30,
        "d3m.primitives.classification.quadratic_discriminant_analysis.SKlearn": 31,
        "d3m.primitives.classification.random_classifier.Test": 32,
        "d3m.primitives.classification.random_forest.DataFrameCommon": 33,
        "d3m.primitives.classification.random_forest.SKlearn": 34,
        "d3m.primitives.classification.search.Find_projections": 35,
        "d3m.primitives.classification.search_hybrid.Find_projections": 36,
        "d3m.primitives.classification.sgd.SKlearn": 37,
        "d3m.primitives.classification.svc.SKlearn": 38,
        "d3m.primitives.classification.tensor_machines_binary_classification.TensorMachinesBinaryClassification": 39,
        "d3m.primitives.classification.tree_augmented_naive_bayes.BayesianInfRPI": 40,
        "d3m.primitives.classification.xgboost_dart.DataFrameCommon": 42,
        "d3m.primitives.classification.xgboost_gbtree.DataFrameCommon": 43,
        "d3m.primitives.learner.text_classifier.DistilTextClassifier": 274
    },
    "COMMUNITY_DETECTION": {
        "d3m.primitives.classification.community_detection.CommunityDetection": 5,
        "d3m.primitives.community_detection.community_detection_parser.CommunityDetectionParser": 56,
        "d3m.primitives.data_transformation.community_detection.DistilCommunityDetection": 138
    },
    "DATA_PREPROCESSING": {
        "d3m.primitives.classification.ensemble_voting.DSBOX": 9,
        "d3m.primitives.data_preprocessing.audio_loader.DistilAudioDatasetLoader": 77,
        "d3m.primitives.data_preprocessing.audio_reader.BBN": 78,
        "d3m.primitives.data_preprocessing.audio_reader.DataFrameCommon": 79,
        "d3m.primitives.data_preprocessing.audio_slicer.Umich": 80,
        "d3m.primitives.data_preprocessing.binarizer.SKlearn": 81,
        "d3m.primitives.data_preprocessing.channel_averager.BBN": 82,
        "d3m.primitives.data_preprocessing.count_vectorizer.SKlearn": 83,
        "d3m.primitives.data_preprocessing.csv_reader.BBN": 84,
        "d3m.primitives.data_preprocessing.csv_reader.DataFrameCommon": 85,
        "d3m.primitives.data_preprocessing.data_conversion.FairnessPreProcessing": 86,
        "d3m.primitives.data_preprocessing.dataframe_to_tensor.DSBOX": 87,
        "d3m.primitives.data_preprocessing.dataset_sample.Common": 88,
        "d3m.primitives.data_preprocessing.dataset_text_reader.DatasetTextReader": 89,
        "d3m.primitives.data_preprocessing.datetime_range_filter.DataFrameCommon": 90,
        "d3m.primitives.data_preprocessing.do_nothing.DSBOX": 91,
        "d3m.primitives.data_preprocessing.do_nothing_for_dataset.DSBOX": 92,
        "d3m.primitives.data_preprocessing.encoder.DSBOX": 93,
        "d3m.primitives.data_preprocessing.feature_agglomeration.SKlearn": 94,
        "d3m.primitives.data_preprocessing.flatten.DataFrameCommon": 95,
        "d3m.primitives.data_preprocessing.greedy_imputation.DSBOX": 96,
        "d3m.primitives.data_preprocessing.horizontal_concat.DSBOX": 97,
        "d3m.primitives.data_preprocessing.image_reader.DataFrameCommon": 98,
        "d3m.primitives.data_preprocessing.iterative_regression_imputation.DSBOX": 99,
        "d3m.primitives.data_preprocessing.label_decoder.DataFrameCommon": 100,
        "d3m.primitives.data_preprocessing.label_encoder.DataFrameCommon": 101,
        "d3m.primitives.data_preprocessing.largest_connected_component.JHU": 102,
        "d3m.primitives.data_preprocessing.low_rank_imputer.Cornell": 103,
        "d3m.primitives.data_preprocessing.max_abs_scaler.SKlearn": 104,
        "d3m.primitives.data_preprocessing.mean_imputation.DSBOX": 105,
        "d3m.primitives.data_preprocessing.min_max_scaler.SKlearn": 106,
        "d3m.primitives.data_preprocessing.normalizer.SKlearn": 107,
        "d3m.primitives.data_preprocessing.numeric_range_filter.DataFrameCommon": 108,
        "d3m.primitives.data_preprocessing.nystroem.SKlearn": 109,
        "d3m.primitives.data_preprocessing.one_hot_encoder.MakerCommon": 110,
        "d3m.primitives.data_preprocessing.one_hot_encoder.PandasCommon": 111,
        "d3m.primitives.data_preprocessing.polynomial_features.SKlearn": 112,
        "d3m.primitives.data_preprocessing.quantile_transformer.SKlearn": 113,
        "d3m.primitives.data_preprocessing.random_sampling_imputer.BYU": 114,
        "d3m.primitives.data_preprocessing.random_trees_embedding.SKlearn": 115,
        "d3m.primitives.data_preprocessing.rbf_sampler.SKlearn": 116,
        "d3m.primitives.data_preprocessing.regex_filter.DataFrameCommon": 117,
        "d3m.primitives.data_preprocessing.robust_scaler.SKlearn": 118,
        "d3m.primitives.data_preprocessing.signal_dither.BBN": 119,
        "d3m.primitives.data_preprocessing.splitter.DSBOX": 120,
        "d3m.primitives.data_preprocessing.standard_scaler.SKlearn": 121,
        "d3m.primitives.data_preprocessing.targets_reader.BBN": 122,
        "d3m.primitives.data_preprocessing.term_filter.DataFrameCommon": 123,
        "d3m.primitives.data_preprocessing.text_reader.DataFrameCommon": 124,
        "d3m.primitives.data_preprocessing.tfidf_vectorizer.SKlearn": 125,
        "d3m.primitives.data_preprocessing.time_series_to_list.DSBOX": 126,
        "d3m.primitives.data_preprocessing.trecs.Umich": 127,
        "d3m.primitives.data_preprocessing.truncated_svd.SKlearn": 128,
        "d3m.primitives.data_preprocessing.unary_encoder.DSBOX": 129,
        "d3m.primitives.data_preprocessing.unfold.DSBOX": 130,
        "d3m.primitives.data_preprocessing.vertical_concatenate.DSBOX": 131,
        "d3m.primitives.data_preprocessing.video_reader.DataFrameCommon": 132
    },
    "VERTEX_CLASSIFICATION": {
        "d3m.primitives.classification.vertex_nomination.VertexClassification": 41
    },
    "CLUSTERING": {
        "d3m.primitives.clustering.cluster_curve_fitting_kmeans.BBN": 44,
        "d3m.primitives.clustering.ekss.Umich": 45,
        "d3m.primitives.clustering.gmm.Fastlvm": 46,
        "d3m.primitives.clustering.hdbscan.Hdbscan": 47,
        "d3m.primitives.clustering.k_means.DistilKMeans": 48,
        "d3m.primitives.clustering.k_means.Fastlvm": 49,
        "d3m.primitives.clustering.k_means.Sloth": 50,
        "d3m.primitives.clustering.kss.Umich": 51,
        "d3m.primitives.clustering.ssc_admm.Umich": 52,
        "d3m.primitives.clustering.ssc_cvx.Umich": 53,
        "d3m.primitives.clustering.ssc_omp.Umich": 54
    },
    "COLLABORATIVE_FILTERING": {
        "d3m.primitives.collaborative_filtering.high_rank_imputer.Cornell": 55,
        "d3m.primitives.learner.collaborative_filtering_link_prediction.DistilCollaborativeFiltering": 269,
        "d3m.primitives.link_prediction.collaborative_filtering_link_prediction.CollaborativeFilteringLinkPrediction": 275
    },
    "DATA_AUGMENTATION": {
        "RESULT.0.SKlearn":57,
        "RESULT.1.SKlearn":58,
        "RESULT.2.SKlearn":59,
        "RESULT.3.SKlearn":60,
        "RESULT.4.SKlearn":61
    },
    "DATA_CLEANING": {
        "d3m.primitives.data_cleaning.cleaning_featurizer.DSBOX": 62,
        "d3m.primitives.data_cleaning.column_fold.DSBOX": 63,
        "d3m.primitives.data_cleaning.column_type_profiler.Simon": 64,
        "d3m.primitives.data_cleaning.data_cleaning.Datacleaning": 65,
        "d3m.primitives.data_cleaning.imputer.SKlearn": 66,
        "d3m.primitives.data_cleaning.label_encoder.DSBOX": 67,
        "d3m.primitives.data_cleaning.missing_indicator.SKlearn": 68,
        "d3m.primitives.data_cleaning.tabular_extractor.Common": 69
    },
    "DATA_COMPRESSION": {
        "d3m.primitives.data_compression.go_dec.Umich": 70,
        "d3m.primitives.data_compression.grasta.Umich": 71,
        "d3m.primitives.data_compression.grasta_masked.Umich": 72,
        "d3m.primitives.data_compression.grouse.Umich": 73,
        "d3m.primitives.data_compression.pcp_ialm.Umich": 74,
        "d3m.primitives.data_compression.rpca_lbd.Umich": 75
    },
    "DATA_GENERATION": {
        "d3m.primitives.data_generation.random.Test": 76
    },
    "DATA_TRANSFORMATION": {
        "d3m.primitives.data_transformation.add_semantic_types.DataFrameCommon": 133,
        "d3m.primitives.data_transformation.adjacency_spectral_embedding.JHU": 134,
        "d3m.primitives.data_transformation.cast_to_type.Common": 135,
        "d3m.primitives.data_transformation.collaborative_filtering_parser.CollaborativeFilteringParser": 136,
        "d3m.primitives.data_transformation.column_parser.DataFrameCommon": 137,
        "d3m.primitives.data_transformation.conditioner.Conditioner": 139,
        "d3m.primitives.data_transformation.conditioner.StaticEnsembler": 140,
        "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon": 141,
        "d3m.primitives.data_transformation.cut_audio.DataFrameCommon": 142,
        "d3m.primitives.data_transformation.data_cleaning.DistilEnrichDates": 143,
        "d3m.primitives.data_transformation.data_cleaning.DistilReplaceSingletons": 145,
        "d3m.primitives.data_transformation.data_cleaning.DistilTimeSeriesReshaper": 146,
        "d3m.primitives.data_transformation.dataset_to_dataframe.Common": 149,
        "d3m.primitives.data_transformation.datetime_field_compose.DataFrameCommon": 150,
        "d3m.primitives.data_transformation.denormalize.Common": 151,
        "d3m.primitives.data_transformation.edge_list_to_graph.EdgeListToGraph": 152,
        "d3m.primitives.data_transformation.encoder.DistilBinaryEncoder": 153,
        "d3m.primitives.data_transformation.encoder.DistilTextEncoder": 154,
        "d3m.primitives.data_transformation.extract_columns.DataFrameCommon": 155,
        "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon": 156,
        "d3m.primitives.data_transformation.extract_columns_by_structural_types.DataFrameCommon": 157,
        "d3m.primitives.data_transformation.fast_ica.SKlearn": 158,
        "d3m.primitives.data_transformation.graph_matching_parser.GraphMatchingParser": 159,
        "d3m.primitives.data_transformation.graph_node_splitter.GraphNodeSplitter": 160,
        "d3m.primitives.data_transformation.graph_to_edge_list.DSBOX": 161,
        "d3m.primitives.data_transformation.graph_to_edge_list.GraphToEdgeList": 162,
        "d3m.primitives.data_transformation.graph_transformer.GraphTransformer": 163,
        "d3m.primitives.data_transformation.horizontal_concat.DataFrameConcat": 164,
        "d3m.primitives.data_transformation.i_vector_extractor.BBN": 165,
        "d3m.primitives.data_transformation.imputer.DistilCategoricalImputer": 166,
        "d3m.primitives.data_transformation.laplacian_spectral_embedding.JHU": 167,
        "d3m.primitives.data_transformation.list_to_dataframe.Common": 169,
        "d3m.primitives.data_transformation.list_to_ndarray.Common": 170,
        "d3m.primitives.data_transformation.load_graphs.DistilGraphLoader": 171,
        "d3m.primitives.data_transformation.load_single_graph.DistilSingleGraphLoader": 172,
        "d3m.primitives.data_transformation.ndarray_to_dataframe.Common": 174,
        "d3m.primitives.data_transformation.normalize_column_references.Common": 176,
        "d3m.primitives.data_transformation.normalize_graphs.Common": 177,
        "d3m.primitives.data_transformation.one_hot_encoder.DistilOneHotEncoder": 178,
        "d3m.primitives.data_transformation.one_hot_encoder.SKlearn": 179,
        "d3m.primitives.data_transformation.ordinal_encoder.SKlearn": 180,
        "d3m.primitives.data_transformation.ravel.DataFrameRowCommon": 181,
        "d3m.primitives.data_transformation.remove_columns.DataFrameCommon": 182,
        "d3m.primitives.data_transformation.remove_duplicate_columns.DataFrameCommon": 183,
        "d3m.primitives.data_transformation.remove_semantic_types.DataFrameCommon": 184,
        "d3m.primitives.data_transformation.rename_duplicate_name.DataFrameCommon": 185,
        "d3m.primitives.data_transformation.replace_semantic_types.DataFrameCommon": 186,
        "d3m.primitives.data_transformation.segment_curve_fitter.BBN": 188,
        "d3m.primitives.data_transformation.sequence_to_bag_of_tokens.BBN": 189,
        "d3m.primitives.data_transformation.simple_column_parser.DataFrameCommon": 190,
        "d3m.primitives.data_transformation.stack_ndarray_column.Common": 191,
        "d3m.primitives.data_transformation.stacking_operator.StackingOperator": 192,
        "d3m.primitives.data_transformation.to_numeric.DSBOX": 193,
        "d3m.primitives.data_transformation.vertex_classification_parser.VertexClassificationParser": 194,
        "d3m.primitives.data_transformation.zero_count.ZeroCount": 196
    },
    "DATA_WRANGLING": {
        "d3m.primitives.data_transformation.data_cleaning.DistilRaggedDatasetLoader": 144
    },
    "LINK_PREDICTION": {
        "d3m.primitives.data_transformation.link_prediction.DistilLinkPrediction": 168,
        "d3m.primitives.link_prediction.data_conversion.JHU": 276,
        "d3m.primitives.link_prediction.link_prediction.LinkPrediction": 278,
        "d3m.primitives.link_prediction.rank_classification.JHU": 279
    },
    "None": {
        "d3m.primitives.data_transformation.missing_indicator.DistilMissingIndicator": 173
    },
    "GRAPH_MATCHING": {
        "d3m.primitives.data_transformation.seeded_graph_matcher.DistilSeededGraphMatcher": 187,
        "d3m.primitives.graph_matching.seeded_graph_matching.JHU": 248,
        "d3m.primitives.link_prediction.graph_matching_link_prediction.GraphMatchingLinkPrediction": 277
    },
    "VERTEX_NOMINATION": {
        "d3m.primitives.data_transformation.vertex_nomination.DistilVertexNomination": 195,
        "d3m.primitives.vertex_nomination.spectral_graph_clustering.JHU": 354,
        "d3m.primitives.vertex_nomination.spectral_vertex_nomination.JHU": 355
    },
    "EVALUATION": {
        "d3m.primitives.evaluation.compute_scores.Core": 197,
        "d3m.primitives.evaluation.compute_scores.Test": 198,
        "d3m.primitives.evaluation.fixed_split_dataset_split.Commmon": 199,
        "d3m.primitives.evaluation.kfold_dataset_split.Common": 200,
        "d3m.primitives.evaluation.kfold_timeseries_split.Common": 201,
        "d3m.primitives.evaluation.no_split_dataset_split.Common": 202,
        "d3m.primitives.evaluation.redact_columns.Common": 203,
        "d3m.primitives.evaluation.train_score_dataset_split.Common": 204
    },
    "FEATURE_CONSTRUCTION": {
        "d3m.primitives.feature_construction.categorical_selector.TPOT": 205,
        "d3m.primitives.feature_construction.continous_selector.TPOT": 206,
        "d3m.primitives.feature_construction.corex_continuous.DSBOX": 207,
        "d3m.primitives.feature_construction.corex_supervised.EchoIB": 208,
        "d3m.primitives.feature_construction.corex_text.DSBOX": 209,
        "d3m.primitives.feature_construction.deep_feature_synthesis.Featuretools": 210,
        "d3m.primitives.feature_construction.deep_feature_synthesis.MultiTableFeaturization": 211,
        "d3m.primitives.feature_construction.deep_feature_synthesis.SingleTableFeaturization": 212,
        "d3m.primitives.feature_construction.graph_transformer.GCN": 213,
        "d3m.primitives.feature_construction.graph_transformer.SDNE": 214,
        "d3m.primitives.feature_construction.zero_count.TPOT": 215
    },
    "FEATURE_EXTRACTION": {
        "d3m.primitives.feature_extraction.audio_featurization.Umich": 216,
        "d3m.primitives.feature_extraction.audio_transfer.DistilAudioTransfer": 217,
        "d3m.primitives.feature_extraction.huber_pca.Cornell": 218,
        "d3m.primitives.feature_extraction.i3d.Umich": 219,
        "d3m.primitives.feature_extraction.image_transfer.DistilImageTransfer": 220,
        "d3m.primitives.feature_extraction.inceptionV3_image_feature.DSBOX": 221,
        "d3m.primitives.feature_extraction.kernel_pca.SKlearn": 222,
        "d3m.primitives.feature_extraction.l1_low_rank.L1LowRank": 223,
        "d3m.primitives.feature_extraction.log_mel_spectrogram.Umich": 224,
        "d3m.primitives.feature_extraction.multitable_featurization.DSBOX": 225,
        "d3m.primitives.feature_extraction.pca.SKlearn": 226,
        "d3m.primitives.feature_extraction.pca_features.RandomizedPolyPCA": 227,
        "d3m.primitives.feature_extraction.random_projection_timeseries_featurization.DSBOX": 228,
        "d3m.primitives.feature_extraction.resnet50_image_feature.DSBOX": 229,
        "d3m.primitives.feature_extraction.resnext101_kinetics_video_features.VideoFeaturizer": 230,
        "d3m.primitives.feature_extraction.signal_mfcc.BBN": 231,
        "d3m.primitives.feature_extraction.sparse_pca.RobustSparsePCA": 232,
        "d3m.primitives.feature_extraction.sparse_pca.SparsePCA": 233,
        "d3m.primitives.feature_extraction.tfidf_vectorizer.BBN": 234,
        "d3m.primitives.feature_extraction.vgg16.Umich": 235,
        "d3m.primitives.feature_extraction.vgg16_image_feature.DSBOX": 236,
        "d3m.primitives.feature_extraction.yolo.DSBOX": 237
    },
    "FEATURE_SELECTION": {
        "d3m.primitives.feature_selection.generic_univariate_select.SKlearn": 238,
        "d3m.primitives.feature_selection.joint_mutual_information.AutoRPI": 239,
        "d3m.primitives.feature_selection.pca_features.Pcafeatures": 240,
        "d3m.primitives.feature_selection.rffeatures.Rffeatures": 241,
        "d3m.primitives.feature_selection.score_based_markov_blanket.RPI": 242,
        "d3m.primitives.feature_selection.select_fwe.SKlearn": 243,
        "d3m.primitives.feature_selection.select_percentile.SKlearn": 244,
        "d3m.primitives.feature_selection.simultaneous_markov_blanket.AutoRPI": 245,
        "d3m.primitives.feature_selection.variance_threshold.SKlearn": 246
    },
    "GRAPH_CLUSTERING": {
        "d3m.primitives.graph_clustering.gaussian_clustering.JHU": 247
    },
    "LAYER": {
        "d3m.primitives.layer.add.KerasWrap": 249,
        "d3m.primitives.layer.average_pooling_1d.KerasWrap": 250,
        "d3m.primitives.layer.average_pooling_2d.KerasWrap": 251,
        "d3m.primitives.layer.average_pooling_3d.KerasWrap": 252,
        "d3m.primitives.layer.batch_normalization.KerasWrap": 253,
        "d3m.primitives.layer.concat.KerasWrap": 254,
        "d3m.primitives.layer.convolution_1d.KerasWrap": 255,
        "d3m.primitives.layer.convolution_2d.KerasWrap": 256,
        "d3m.primitives.layer.convolution_3d.KerasWrap": 257,
        "d3m.primitives.layer.dense.KerasWrap": 258,
        "d3m.primitives.layer.dropout.KerasWrap": 259,
        "d3m.primitives.layer.flatten.KerasWrap": 260,
        "d3m.primitives.layer.global_average_pooling_1d.KerasWrap": 261,
        "d3m.primitives.layer.global_average_pooling_2d.KerasWrap": 262,
        "d3m.primitives.layer.global_average_pooling_3d.KerasWrap": 263,
        "d3m.primitives.layer.max_pooling_1d.KerasWrap": 264,
        "d3m.primitives.layer.max_pooling_2d.KerasWrap": 265,
        "d3m.primitives.layer.max_pooling_3d.KerasWrap": 266,
        "d3m.primitives.layer.null.KerasWrap": 267,
        "d3m.primitives.layer.subtract.KerasWrap": 268
    },
    "LEARNER": {
        "d3m.primitives.learner.goturn.Umich": 270,
        "d3m.primitives.learner.model.KerasWrap": 271,
        "d3m.primitives.learner.random_forest.DistilEnsembleForest": 272,
        "d3m.primitives.learner.random_forest.DistilTimeSeriesNeighboursPrimitive": 273
    },
    "LOSS_FUNCTION": {
        "d3m.primitives.loss_function.binary_crossentropy.KerasWrap": 280,
        "d3m.primitives.loss_function.categorical_accuracy.KerasWrap": 281,
        "d3m.primitives.loss_function.categorical_crossentropy.KerasWrap": 282,
        "d3m.primitives.loss_function.categorical_hinge.KerasWrap": 283,
        "d3m.primitives.loss_function.cosine_proximity.KerasWrap": 284,
        "d3m.primitives.loss_function.hinge.KerasWrap": 285,
        "d3m.primitives.loss_function.kullback_leibler_divergence.KerasWrap": 286,
        "d3m.primitives.loss_function.logcosh.KerasWrap": 287,
        "d3m.primitives.loss_function.mean_absolute_error.KerasWrap": 288,
        "d3m.primitives.loss_function.mean_absolute_percentage_error.KerasWrap": 289,
        "d3m.primitives.loss_function.mean_squared_error.KerasWrap": 290,
        "d3m.primitives.loss_function.mean_squared_logarithmic_error.KerasWrap": 291,
        "d3m.primitives.loss_function.poisson.KerasWrap": 292,
        "d3m.primitives.loss_function.sparse_categorical_crossentropy.KerasWrap": 293,
        "d3m.primitives.loss_function.squared_hinge.KerasWrap": 294
    },
    "METALEARNING": {
        "d3m.primitives.metalearning.metafeature_extractor.BYU": 295,
        "d3m.primitives.metalearning.metafeature_extractor.Common": 296
    },
    "NATURAL_LANGUAGE_PROCESSING": {
        "d3m.primitives.natural_language_processing.glda.Fastlvm": 297,
        "d3m.primitives.natural_language_processing.hdp.Fastlvm": 298,
        "d3m.primitives.natural_language_processing.lda.Fastlvm": 299
    },
    "NORMALIZATION": {
        "d3m.primitives.normalization.iqr_scaler.DSBOX": 300
    },
    "OBJECT_DETECTION": {
        "d3m.primitives.object_detection.retina_net.JPLPrimitives": 301
    },
    "OPERATOR": {
        "d3m.primitives.operator.column_map.DataFrameCommon": 302,
        "d3m.primitives.operator.dataset_map.DataFrameCommon": 303,
        "d3m.primitives.operator.increment.Test": 304,
        "d3m.primitives.operator.null.TransformerTest": 305,
        "d3m.primitives.operator.null.UnsupervisedLearnerTest": 306,
        "d3m.primitives.operator.primitive_sum.Test": 307,
        "d3m.primitives.operator.sum.Test": 308
    },
    "REGRESSION": {
        "d3m.primitives.regression.ada_boost.SKlearn": 309,
        "d3m.primitives.regression.ard.SKlearn": 310,
        "d3m.primitives.regression.corex_supervised.EchoLinear": 311,
        "d3m.primitives.regression.cover_tree.Fastlvm": 312,
        "d3m.primitives.regression.decision_tree.SKlearn": 313,
        "d3m.primitives.regression.dummy.SKlearn": 314,
        "d3m.primitives.regression.elastic_net.SKlearn": 315,
        "d3m.primitives.regression.extra_trees.SKlearn": 316,
        "d3m.primitives.regression.fast_lad.FastLAD": 317,
        "d3m.primitives.regression.gaussian_process.SKlearn": 318,
        "d3m.primitives.regression.gradient_boosting.SKlearn": 319,
        "d3m.primitives.regression.k_neighbors.SKlearn": 320,
        "d3m.primitives.regression.kernel_ridge.SKlearn": 321,
        "d3m.primitives.regression.lars.SKlearn": 322,
        "d3m.primitives.regression.lasso.SKlearn": 323,
        "d3m.primitives.regression.lasso_cv.SKlearn": 324,
        "d3m.primitives.regression.linear_svr.SKlearn": 325,
        "d3m.primitives.regression.mlp.SKlearn": 326,
        "d3m.primitives.regression.monomial.Test": 327,
        "d3m.primitives.regression.owl_regression.Umich": 328,
        "d3m.primitives.regression.passive_aggressive.SKlearn": 329,
        "d3m.primitives.regression.random_forest.SKlearn": 330,
        "d3m.primitives.regression.rfm_precondition_ed_gaussian_krr.RFMPreconditionedGaussianKRR": 331,
        "d3m.primitives.regression.rfm_precondition_ed_polynomial_krr.RFMPreconditionedPolynomialKRR": 332,
        "d3m.primitives.regression.ridge.SKlearn": 333,
        "d3m.primitives.regression.search_hybrid_numeric.Find_projections": 334,
        "d3m.primitives.regression.search_numeric.Find_projections": 335,
        "d3m.primitives.regression.sgd.SKlearn": 336,
        "d3m.primitives.regression.svr.SKlearn": 337,
        "d3m.primitives.regression.tensor_machines_regularized_least_squares.TensorMachinesRegularizedLeastSquares": 338,
        "d3m.primitives.regression.xgboost_gbtree.DataFrameCommon": 339
    },
    "SCHEMA_DISCOVERY": {
        "d3m.primitives.schema_discovery.profiler.Common": 340,
        "d3m.primitives.schema_discovery.profiler.DSBOX": 341
    },
    "SEMISUPERVISED_CLASSIFICATION": {
        "d3m.primitives.semisupervised_classification.iterative_labeling.AutonBox": 342
    },
    "SIMILARITY_MODELING": {
        "d3m.primitives.similarity_modeling.rfd.Umich": 343
    },
    "TIME_SERIES_CLASSIFICATION": {
        "d3m.primitives.time_series_classification.convolutional_neural_net.LSTM_FCN": 344,
        "d3m.primitives.time_series_classification.k_neighbors.Kanine": 345,
        "d3m.primitives.time_series_classification.shapelet_learning.Shallot": 346
    },
    "TIME_SERIES_FORECASTING": {
        "d3m.primitives.time_series_forecasting.arima.DSBOX": 347,
        "d3m.primitives.time_series_forecasting.arima.Parrot": 348,
        "d3m.primitives.time_series_forecasting.rnn_time_series.DSBOX": 349,
        "d3m.primitives.time_series_forecasting.time_series_to_list.RelationalTimeseries": 350,
        "d3m.primitives.time_series_forecasting.vector_autoregression.VAR": 351
    },
    "TIME_SERIES_SEGMENTATION": {
        "d3m.primitives.time_series_segmentation.signal_framer.BBN": 352,
        "d3m.primitives.time_series_segmentation.uniform_segmentation.BBN": 353
    }
}