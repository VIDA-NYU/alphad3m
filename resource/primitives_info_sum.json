{
    "CLASSIFICATION": {
        "d3m.primitives.classification.bagging.SKlearn": 1,
        "d3m.primitives.classification.bayesian_logistic_regression.Common": 2,
        "d3m.primitives.classification.bernoulli_naive_bayes.SKlearn": 3,
        "d3m.primitives.classification.community_detection.CommunityDetection": 4,
        "d3m.primitives.classification.cover_tree.Fastlvm": 5,
        "d3m.primitives.classification.decision_tree.SKlearn": 6,
        "d3m.primitives.classification.dummy.SKlearn": 7,
        "d3m.primitives.classification.extra_trees.SKlearn": 9,
        "d3m.primitives.classification.gaussian_classification.MeanBaseline": 10,
        "d3m.primitives.classification.gaussian_naive_bayes.SKlearn": 11,
        "d3m.primitives.classification.general_relational_dataset.GeneralRelationalDataset": 12,
        "d3m.primitives.classification.gradient_boosting.SKlearn": 13,
        "d3m.primitives.classification.k_neighbors.SKlearn": 14,
        "d3m.primitives.classification.light_gbm.DataFrameCommon": 15,
        "d3m.primitives.classification.linear_discriminant_analysis.SKlearn": 16,
        "d3m.primitives.classification.linear_svc.SKlearn": 17,
        "d3m.primitives.classification.logistic_regression.SKlearn": 18,
        "d3m.primitives.classification.lstm.DSBOX": 19,
        "d3m.primitives.classification.lupi_svm.LupiSvmClassifier": 20,
        "d3m.primitives.classification.mlp.BBNMLPClassifier": 21,
        "d3m.primitives.classification.mlp.SKlearn": 22,
        "d3m.primitives.classification.multilabel_classifier.DSBOX": 23,
        "d3m.primitives.classification.multinomial_naive_bayes.SKlearn": 24,
        "d3m.primitives.classification.nearest_centroid.SKlearn": 25,
        "d3m.primitives.classification.passive_aggressive.SKlearn": 26,
        "d3m.primitives.classification.quadratic_discriminant_analysis.SKlearn": 27,
        "d3m.primitives.classification.random_classifier.Test": 28,
        "d3m.primitives.classification.random_forest.DataFrameCommon": 29,
        "d3m.primitives.classification.random_forest.SKlearn": 30,
        "d3m.primitives.classification.search.Find_projections": 31,
        "d3m.primitives.classification.search_hybrid.Find_projections": 32,
        "d3m.primitives.classification.sgd.SKlearn": 33,
        "d3m.primitives.classification.svc.SKlearn": 34,
        "d3m.primitives.classification.tree_augmented_naive_bayes.BayesianInfRPI": 35,
        "d3m.primitives.classification.vertex_nomination.VertexNomination": 36,
        "d3m.primitives.classification.xgboost_dart.DataFrameCommon": 37,
        "d3m.primitives.classification.xgboost_gbtree.DataFrameCommon": 38
    },
    "DATA_PREPROCESSING": {
        "d3m.primitives.classification.ensemble_voting.DSBOX": 8,
        "d3m.primitives.data_preprocessing.audio_reader.AudioReader": 67,
        "d3m.primitives.data_preprocessing.audio_reader.DataFrameCommon": 68,
        "d3m.primitives.data_preprocessing.audio_slicer.Umich": 69,
        "d3m.primitives.data_preprocessing.binarizer.SKlearn": 70,
        "d3m.primitives.data_preprocessing.channel_averager.ChannelAverager": 71,
        "d3m.primitives.data_preprocessing.count_vectorizer.SKlearn": 72,
        "d3m.primitives.data_preprocessing.csv_reader.DataFrameCommon": 73,
        "d3m.primitives.data_preprocessing.dataframe_to_tensor.DSBOX": 74,
        "d3m.primitives.data_preprocessing.dataset_text_reader.DatasetTextReader": 75,
        "d3m.primitives.data_preprocessing.do_nothing.DSBOX": 76,
        "d3m.primitives.data_preprocessing.do_nothing_for_dataset.DSBOX": 77,
        "d3m.primitives.data_preprocessing.encoder.DSBOX": 78,
        "d3m.primitives.data_preprocessing.feature_agglomeration.SKlearn": 79,
        "d3m.primitives.data_preprocessing.greedy_imputation.DSBOX": 80,
        "d3m.primitives.data_preprocessing.horizontal_concat.DSBOX": 81,
        "d3m.primitives.data_preprocessing.image_reader.Common": 82,
        "d3m.primitives.data_preprocessing.image_reader.DataFrameCommon": 83,
        "d3m.primitives.data_preprocessing.iterative_regression_imputation.DSBOX": 84,
        "d3m.primitives.data_preprocessing.label_decoder.DataFrameCommon": 85,
        "d3m.primitives.data_preprocessing.label_encoder.DataFrameCommon": 86,
        "d3m.primitives.data_preprocessing.max_abs_scaler.SKlearn": 87,
        "d3m.primitives.data_preprocessing.mean_imputation.DSBOX": 88,
        "d3m.primitives.data_preprocessing.min_max_scaler.SKlearn": 89,
        "d3m.primitives.data_preprocessing.normalizer.SKlearn": 90,
        "d3m.primitives.data_preprocessing.numeric_range_filter.DataFrameCommon": 91,
        "d3m.primitives.data_preprocessing.nystroem.SKlearn": 92,
        "d3m.primitives.data_preprocessing.one_hot_encoder.MakerCommon": 93,
        "d3m.primitives.data_preprocessing.one_hot_encoder.PandasCommon": 94,
        "d3m.primitives.data_preprocessing.polynomial_features.SKlearn": 95,
        "d3m.primitives.data_preprocessing.random_sampling_imputer.BYU": 96,
        "d3m.primitives.data_preprocessing.random_trees_embedding.SKlearn": 97,
        "d3m.primitives.data_preprocessing.rbf_sampler.SKlearn": 98,
        "d3m.primitives.data_preprocessing.regex_filter.DataFrameCommon": 99,
        "d3m.primitives.data_preprocessing.robust_scaler.SKlearn": 100,
        "d3m.primitives.data_preprocessing.signal_dither.SignalDither": 101,
        "d3m.primitives.data_preprocessing.splitter.DSBOX": 102,
        "d3m.primitives.data_preprocessing.standard_scaler.SKlearn": 103,
        "d3m.primitives.data_preprocessing.targets_reader.TargetsReader": 104,
        "d3m.primitives.data_preprocessing.term_filter.DataFrameCommon": 105,
        "d3m.primitives.data_preprocessing.text_reader.DataFrameCommon": 106,
        "d3m.primitives.data_preprocessing.tfidf_vectorizer.SKlearn": 107,
        "d3m.primitives.data_preprocessing.time_series_to_list.DSBOX": 108,
        "d3m.primitives.data_preprocessing.trecs.Umich": 109,
        "d3m.primitives.data_preprocessing.truncated_svd.SKlearn": 110,
        "d3m.primitives.data_preprocessing.unary_encoder.DSBOX": 111,
        "d3m.primitives.data_preprocessing.unfold.DSBOX": 112,
        "d3m.primitives.data_preprocessing.vertical_concatenate.DSBOX": 113,
        "d3m.primitives.data_preprocessing.video_reader.DataFrameCommon": 114
    },
    "CLUSTERING": {
        "d3m.primitives.clustering.cluster_curve_fitting_kmeans.ClusterCurveFittingKMeans": 39,
        "d3m.primitives.clustering.ekss.Umich": 40,
        "d3m.primitives.clustering.gmm.Fastlvm": 41,
        "d3m.primitives.clustering.hdbscan.Hdbscan": 42,
        "d3m.primitives.clustering.k_means.Common": 43,
        "d3m.primitives.clustering.k_means.Fastlvm": 44,
        "d3m.primitives.clustering.k_means.Sloth": 45,
        "d3m.primitives.clustering.kss.Umich": 46,
        "d3m.primitives.clustering.ssc_admm.Umich": 47,
        "d3m.primitives.clustering.ssc_cvx.Umich": 48,
        "d3m.primitives.clustering.ssc_omp.Umich": 49
    },
    "COMMUNITY_DETECTION": {
        "d3m.primitives.community_detection.community_detection_parser.CommunityDetectionParser": 50
    },
    "DATA_AUGMENTATION": {
        "d3m.primitives.data_augmentation.wikifier.DSBOX": 51
    },
    "DATA_CLEANING": {
        "d3m.primitives.data_cleaning.cleaning_featurizer.DSBOX": 52,
        "d3m.primitives.data_cleaning.column_fold.DSBOX": 53,
        "d3m.primitives.data_cleaning.column_type_profiler.Simon": 54,
        "d3m.primitives.data_cleaning.data_cleaning.Datacleaning": 55,
        "d3m.primitives.data_cleaning.imputer.SKlearn": 56,
        "d3m.primitives.data_cleaning.label_encoder.DSBOX": 57,
        "d3m.primitives.data_cleaning.missing_indicator.SKlearn": 58,
        "d3m.primitives.data_cleaning.tabular_extractor.Common": 59
    },
    "DATA_COMPRESSION": {
        "d3m.primitives.data_compression.go_dec.Umich": 60,
        "d3m.primitives.data_compression.grasta.Umich": 61,
        "d3m.primitives.data_compression.grasta_masked.Umich": 62,
        "d3m.primitives.data_compression.grouse.Umich": 63,
        "d3m.primitives.data_compression.pcp_ialm.Umich": 64,
        "d3m.primitives.data_compression.rpca_lbd.Umich": 65
    },
    "DATA_GENERATION": {
        "d3m.primitives.data_generation.random.Test": 66
    },
    "DATA_TRANSFORMATION": {
        "d3m.primitives.data_transformation.add_semantic_types.DataFrameCommon": 115,
        "d3m.primitives.data_transformation.cast_to_type.Common": 116,
        "d3m.primitives.data_transformation.collaborative_filtering_parser.CollaborativeFilteringParser": 117,
        "d3m.primitives.data_transformation.column_parser.DataFrameCommon": 118,
        "d3m.primitives.data_transformation.conditioner.Conditioner": 119,
        "d3m.primitives.data_transformation.conditioner.StaticEnsembler": 120,
        "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon": 121,
        "d3m.primitives.data_transformation.cut_audio.DataFrameCommon": 122,
        "d3m.primitives.data_transformation.dataframe_to_list.Common": 123,
        "d3m.primitives.data_transformation.dataframe_to_ndarray.Common": 124,
        "d3m.primitives.data_transformation.dataset_to_dataframe.Common": 125,
        "d3m.primitives.data_transformation.denormalize.Common": 126,
        "d3m.primitives.data_transformation.edge_list_to_graph.EdgeListToGraph": 127,
        "d3m.primitives.data_transformation.extract_columns.DataFrameCommon": 128,
        "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon": 129,
        "d3m.primitives.data_transformation.extract_columns_by_structural_types.DataFrameCommon": 130,
        "d3m.primitives.data_transformation.fast_ica.SKlearn": 131,
        "d3m.primitives.data_transformation.graph_matching_parser.GraphMatchingParser": 132,
        "d3m.primitives.data_transformation.graph_node_splitter.GraphNodeSplitter": 133,
        "d3m.primitives.data_transformation.graph_to_edge_list.DSBOX": 134,
        "d3m.primitives.data_transformation.graph_to_edge_list.GraphToEdgeList": 135,
        "d3m.primitives.data_transformation.graph_transformer.GraphTransformer": 136,
        "d3m.primitives.data_transformation.horizontal_concat.DataFrameConcat": 137,
        "d3m.primitives.data_transformation.i_vector_extractor.IVectorExtractor": 138,
        "d3m.primitives.data_transformation.list_to_dataframe.Common": 139,
        "d3m.primitives.data_transformation.list_to_ndarray.Common": 140,
        "d3m.primitives.data_transformation.ndarray_to_dataframe.Common": 141,
        "d3m.primitives.data_transformation.ndarray_to_list.Common": 142,
        "d3m.primitives.data_transformation.normalize_column_references.Common": 143,
        "d3m.primitives.data_transformation.normalize_graphs.Common": 144,
        "d3m.primitives.data_transformation.one_hot_encoder.SKlearn": 145,
        "d3m.primitives.data_transformation.ordinal_encoder.SKlearn": 146,
        "d3m.primitives.data_transformation.ravel.DataFrameRowCommon": 147,
        "d3m.primitives.data_transformation.remove_columns.DataFrameCommon": 148,
        "d3m.primitives.data_transformation.remove_duplicate_columns.DataFrameCommon": 149,
        "d3m.primitives.data_transformation.remove_semantic_types.DataFrameCommon": 150,
        "d3m.primitives.data_transformation.rename_duplicate_name.DataFrameCommon": 151,
        "d3m.primitives.data_transformation.replace_semantic_types.DataFrameCommon": 152,
        "d3m.primitives.data_transformation.segment_curve_fitter.SegmentCurveFitter": 153,
        "d3m.primitives.data_transformation.sequence_to_bag_of_tokens.SequenceToBagOfTokens": 154,
        "d3m.primitives.data_transformation.stack_ndarray_column.Common": 155,
        "d3m.primitives.data_transformation.stacking_operator.StackingOperator": 156,
        "d3m.primitives.data_transformation.to_numeric.DSBOX": 157,
        "d3m.primitives.data_transformation.vertex_nomination_parser.VertexNominationParser": 158,
        "d3m.primitives.data_transformation.zero_count.ZeroCount": 159
    },
    "EVALUATION": {
        "d3m.primitives.evaluation.compute_scores.Core": 160,
        "d3m.primitives.evaluation.compute_scores.Test": 161,
        "d3m.primitives.evaluation.fixed_split_dataset_split.Commmon": 162,
        "d3m.primitives.evaluation.kfold_dataset_split.Common": 163,
        "d3m.primitives.evaluation.kfold_timeseries_split.Common": 164,
        "d3m.primitives.evaluation.no_split_dataset_split.Common": 165,
        "d3m.primitives.evaluation.redact_columns.Common": 166,
        "d3m.primitives.evaluation.train_score_dataset_split.Common": 167
    },
    "FEATURE_CONSTRUCTION": {
        "d3m.primitives.feature_construction.corex_continuous.CorexContinuous": 168,
        "d3m.primitives.feature_construction.corex_supervised.EchoIBClf": 169,
        "d3m.primitives.feature_construction.corex_supervised.EchoIBReg": 170,
        "d3m.primitives.feature_construction.corex_text.CorexText": 171,
        "d3m.primitives.feature_construction.deep_feature_synthesis.Featuretools": 172,
        "d3m.primitives.feature_construction.deep_feature_synthesis.SingleTableFeaturization": 173,
        "d3m.primitives.feature_construction.graph_transformer.GCN": 174,
        "d3m.primitives.feature_construction.graph_transformer.SDNE": 175
    },
    "FEATURE_EXTRACTION": {
        "d3m.primitives.feature_extraction.audio_featurization.Umich": 176,
        "d3m.primitives.feature_extraction.i3d.Umich": 177,
        "d3m.primitives.feature_extraction.inceptionV3_image_feature.DSBOX": 178,
        "d3m.primitives.feature_extraction.kernel_pca.SKlearn": 179,
        "d3m.primitives.feature_extraction.log_mel_spectrogram.Umich": 180,
        "d3m.primitives.feature_extraction.multitable_featurization.DSBOX": 181,
        "d3m.primitives.feature_extraction.pca.Common": 182,
        "d3m.primitives.feature_extraction.pca.SKlearn": 183,
        "d3m.primitives.feature_extraction.random_projection_timeseries_featurization.DSBOX": 184,
        "d3m.primitives.feature_extraction.resnet50_image_feature.DSBOX": 185,
        "d3m.primitives.feature_extraction.signal_mfcc.SignalMFCC": 186,
        "d3m.primitives.feature_extraction.sparse_pca.Common": 187,
        "d3m.primitives.feature_extraction.tfidf_vectorizer.BBNTfidfTransformer": 188,
        "d3m.primitives.feature_extraction.vgg16.Umich": 189,
        "d3m.primitives.feature_extraction.vgg16_image_feature.DSBOX": 190,
        "d3m.primitives.feature_extraction.yolo.DSBOX": 191
    },
    "FEATURE_SELECTION": {
        "d3m.primitives.feature_selection.generic_univariate_select.SKlearn": 192,
        "d3m.primitives.feature_selection.joint_mutual_information.AutoRPI": 193,
        "d3m.primitives.feature_selection.pca_features.Pcafeatures": 194,
        "d3m.primitives.feature_selection.rffeatures.Rffeatures": 195,
        "d3m.primitives.feature_selection.score_based_markov_blanket.RPI": 196,
        "d3m.primitives.feature_selection.select_fwe.SKlearn": 197,
        "d3m.primitives.feature_selection.select_percentile.SKlearn": 198,
        "d3m.primitives.feature_selection.simultaneous_markov_blanket.AutoRPI": 199,
        "d3m.primitives.feature_selection.variance_threshold.SKlearn": 200
    },
    "LAYER": {
        "d3m.primitives.layer.add.KerasWrap": 201,
        "d3m.primitives.layer.average_pooling_1d.KerasWrap": 202,
        "d3m.primitives.layer.average_pooling_2d.KerasWrap": 203,
        "d3m.primitives.layer.average_pooling_3d.KerasWrap": 204,
        "d3m.primitives.layer.batch_normalization.KerasWrap": 205,
        "d3m.primitives.layer.concat.KerasWrap": 206,
        "d3m.primitives.layer.convolution_1d.KerasWrap": 207,
        "d3m.primitives.layer.convolution_2d.KerasWrap": 208,
        "d3m.primitives.layer.convolution_3d.KerasWrap": 209,
        "d3m.primitives.layer.dense.KerasWrap": 210,
        "d3m.primitives.layer.dropout.KerasWrap": 211,
        "d3m.primitives.layer.flatten.KerasWrap": 212,
        "d3m.primitives.layer.global_average_pooling_1d.KerasWrap": 213,
        "d3m.primitives.layer.global_average_pooling_2d.KerasWrap": 214,
        "d3m.primitives.layer.global_average_pooling_3d.KerasWrap": 215,
        "d3m.primitives.layer.max_pooling_1d.KerasWrap": 216,
        "d3m.primitives.layer.max_pooling_2d.KerasWrap": 217,
        "d3m.primitives.layer.max_pooling_3d.KerasWrap": 218,
        "d3m.primitives.layer.null.KerasWrap": 219,
        "d3m.primitives.layer.subtract.KerasWrap": 220
    },
    "LEARNER": {
        "d3m.primitives.learner.goturn.Umich": 221,
        "d3m.primitives.learner.model.KerasWrap": 222
    },
    "LINK_PREDICTION": {
        "d3m.primitives.link_prediction.collaborative_filtering_link_prediction.CollaborativeFilteringLinkPrediction": 223,
        "d3m.primitives.link_prediction.graph_matching_link_prediction.GraphMatchingLinkPrediction": 224,
        "d3m.primitives.link_prediction.link_prediction.LinkPrediction": 225
    },
    "LOSS_FUNCTION": {
        "d3m.primitives.loss_function.binary_crossentropy.KerasWrap": 226,
        "d3m.primitives.loss_function.categorical_accuracy.KerasWrap": 227,
        "d3m.primitives.loss_function.categorical_crossentropy.KerasWrap": 228,
        "d3m.primitives.loss_function.categorical_hinge.KerasWrap": 229,
        "d3m.primitives.loss_function.cosine_proximity.KerasWrap": 230,
        "d3m.primitives.loss_function.hinge.KerasWrap": 231,
        "d3m.primitives.loss_function.kullback_leibler_divergence.KerasWrap": 232,
        "d3m.primitives.loss_function.logcosh.KerasWrap": 233,
        "d3m.primitives.loss_function.mean_absolute_error.KerasWrap": 234,
        "d3m.primitives.loss_function.mean_absolute_percentage_error.KerasWrap": 235,
        "d3m.primitives.loss_function.mean_squared_logarithmic_error.KerasWrap": 237,
        "d3m.primitives.loss_function.poisson.KerasWrap": 238,
        "d3m.primitives.loss_function.sparse_categorical_crossentropy.KerasWrap": 239,
        "d3m.primitives.loss_function.squared_hinge.KerasWrap": 240
    },
    "OPERATOR": {
        "d3m.primitives.loss_function.mean_squared_error.KerasWrap": 236,
        "d3m.primitives.operator.column_map.DataFrameCommon": 249,
        "d3m.primitives.operator.dataset_map.DataFrameCommon": 250,
        "d3m.primitives.operator.diagonal_mvn.Common": 251,
        "d3m.primitives.operator.increment.Test": 252,
        "d3m.primitives.operator.null.TransformerTest": 253,
        "d3m.primitives.operator.null.UnsupervisedLearnerTest": 254,
        "d3m.primitives.operator.primitive_sum.Test": 255,
        "d3m.primitives.operator.sum.Test": 256
    },
    "METALEARNING": {
        "d3m.primitives.metalearning.metafeature_extractor.BYU": 241,
        "d3m.primitives.metalearning.metafeature_extractor.Common": 242
    },
    "NATURAL_LANGUAGE_PROCESSING": {
        "d3m.primitives.natural_language_processing.glda.Fastlvm": 243,
        "d3m.primitives.natural_language_processing.hdp.Fastlvm": 244,
        "d3m.primitives.natural_language_processing.lda.Fastlvm": 245
    },
    "NORMALIZATION": {
        "d3m.primitives.normalization.denormalize.DSBOX": 246,
        "d3m.primitives.normalization.iqr_scaler.DSBOX": 247
    },
    "OBJECT_DETECTION": {
        "d3m.primitives.object_detection.retina_net.JPLPrimitives": 248
    },
    "REGRESSION": {
        "d3m.primitives.regression.ard.SKlearn": 257,
        "d3m.primitives.regression.convolutional_neural_net.TorchCommon": 258,
        "d3m.primitives.regression.corex_supervised.EchoLinear": 259,
        "d3m.primitives.regression.cover_tree.Fastlvm": 260,
        "d3m.primitives.regression.decision_tree.SKlearn": 261,
        "d3m.primitives.regression.dummy.SKlearn": 262,
        "d3m.primitives.regression.elastic_net.SKlearn": 263,
        "d3m.primitives.regression.extra_trees.SKlearn": 264,
        "d3m.primitives.regression.feed_forward_neural_net.TorchCommon": 265,
        "d3m.primitives.regression.gaussian_process.SKlearn": 266,
        "d3m.primitives.regression.gradient_boosting.SKlearn": 267,
        "d3m.primitives.regression.k_neighbors.SKlearn": 268,
        "d3m.primitives.regression.kernel_ridge.SKlearn": 269,
        "d3m.primitives.regression.lars.SKlearn": 270,
        "d3m.primitives.regression.lasso.SKlearn": 271,
        "d3m.primitives.regression.lasso_cv.SKlearn": 272,
        "d3m.primitives.regression.linear_regression.Common": 273,
        "d3m.primitives.regression.linear_svr.SKlearn": 274,
        "d3m.primitives.regression.loss.TorchCommon": 275,
        "d3m.primitives.regression.mlp.SKlearn": 276,
        "d3m.primitives.regression.monomial.Test": 277,
        "d3m.primitives.regression.owl_regression.Umich": 278,
        "d3m.primitives.regression.passive_aggressive.SKlearn": 279,
        "d3m.primitives.regression.random_forest.SKlearn": 280,
        "d3m.primitives.regression.ridge.SKlearn": 281,
        "d3m.primitives.regression.search_hybrid_numeric.Find_projections": 282,
        "d3m.primitives.regression.search_numeric.Find_projections": 283,
        "d3m.primitives.regression.sgd.SKlearn": 284,
        "d3m.primitives.regression.svr.SKlearn": 285,
        "d3m.primitives.regression.xgboost_gbtree.DataFrameCommon": 286
    },
    "SCHEMA_DISCOVERY": {
        "d3m.primitives.schema_discovery.profiler.Common": 287,
        "d3m.primitives.schema_discovery.profiler.DSBOX": 288
    },
    "SEMISUPERVISED_CLASSIFICATION": {
        "d3m.primitives.semisupervised_classification.iterative_labeling.AutonBox": 289
    },
    "SIMILARITY_MODELING": {
        "d3m.primitives.similarity_modeling.rfd.Umich": 290
    },
    "TIME_SERIES_CLASSIFICATION": {
        "d3m.primitives.time_series_classification.k_neighbors.Kanine": 291,
        "d3m.primitives.time_series_classification.shapelet_learning.Shallot": 292
    },
    "TIME_SERIES_FORECASTING": {
        "d3m.primitives.time_series_forecasting.arima.DSBOX": 293,
        "d3m.primitives.time_series_forecasting.arima.Parrot": 294,
        "d3m.primitives.time_series_forecasting.rnn_time_series.DSBOX": 295,
        "d3m.primitives.time_series_forecasting.time_series_to_list.RelationalTimeseries": 296,
        "d3m.primitives.time_series_forecasting.vector_autoregression.VAR": 297
    },
    "TIME_SERIES_SEGMENTATION": {
        "d3m.primitives.time_series_segmentation.signal_framer.SignalFramer": 298,
        "d3m.primitives.time_series_segmentation.uniform_segmentation.UniformSegmentation": 299
    }
}